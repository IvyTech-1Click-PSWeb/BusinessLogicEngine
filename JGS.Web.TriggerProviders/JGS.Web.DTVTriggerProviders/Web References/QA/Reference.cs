//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4963
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4963.
// 
#pragma warning disable 1591

namespace JGS.Web.DTVTriggerProviders.QA {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QueryAdapterWrapperSoap", Namespace="http://tempuri.org/")]
    public partial class QueryAdapterWrapper : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFFValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppControlsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsTechReturnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextWorkCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefectCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsCosmeticDefectOpenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitInfoNonWOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFFByWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutComeCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssemblyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateAssemblyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefectCodeByAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDefectCodeByAssemblyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefectCodes4WCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateDefectCodes4WCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActionByDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateActionByDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultByActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetResultByDefectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECOByPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSerialECOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSNHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkCenterByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoutesByWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitFAInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompByAssemblyByActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLastWorkCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMByDefectActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoNonWOHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateTimeoutByWCOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnitInfoNonWOXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_CodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFAFFValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompFAFFValuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemInfoByXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidatePartNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartReqByItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCascadingBOMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompFAFFValuesV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlternatePartMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReqTemplateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartNoDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartNoDetails2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBCNBySNPNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMNoDefectActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDefectActionTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAltPartDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchingCOMPASSYBYACTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBOMRemByDefectActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNonBOMInvByPartOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnersConditionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QueryAdapterWrapper() {
            this.Url = global::JGS.Web.DTVTriggerProviders.Properties.Settings.Default.JGS_Web_DTVTriggerProviders_QA_QueryAdapterWrapper;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFFValuesCompletedEventHandler GetFFValuesCompleted;
        
        /// <remarks/>
        public event GetAppControlsCompletedEventHandler GetAppControlsCompleted;
        
        /// <remarks/>
        public event GetPartReqCompletedEventHandler GetPartReqCompleted;
        
        /// <remarks/>
        public event GetUnitInfoCompletedEventHandler GetUnitInfoCompleted;
        
        /// <remarks/>
        public event IsTechReturnCompletedEventHandler IsTechReturnCompleted;
        
        /// <remarks/>
        public event GetResultCodesCompletedEventHandler GetResultCodesCompleted;
        
        /// <remarks/>
        public event GetNextWorkCenterCompletedEventHandler GetNextWorkCenterCompleted;
        
        /// <remarks/>
        public event GetDefectCodesCompletedEventHandler GetDefectCodesCompleted;
        
        /// <remarks/>
        public event IsCosmeticDefectOpenCompletedEventHandler IsCosmeticDefectOpenCompleted;
        
        /// <remarks/>
        public event GetUnitInfoNonWOCompletedEventHandler GetUnitInfoNonWOCompleted;
        
        /// <remarks/>
        public event GetUnitCountCompletedEventHandler GetUnitCountCompleted;
        
        /// <remarks/>
        public event GetFFByWCCompletedEventHandler GetFFByWCCompleted;
        
        /// <remarks/>
        public event GetOutComeCodesCompletedEventHandler GetOutComeCodesCompleted;
        
        /// <remarks/>
        public event GetAssemblyCodesCompletedEventHandler GetAssemblyCodesCompleted;
        
        /// <remarks/>
        public event ValidateAssemblyCodeCompletedEventHandler ValidateAssemblyCodeCompleted;
        
        /// <remarks/>
        public event GetDefectCodeByAssemblyCompletedEventHandler GetDefectCodeByAssemblyCompleted;
        
        /// <remarks/>
        public event ValidateDefectCodeByAssemblyCompletedEventHandler ValidateDefectCodeByAssemblyCompleted;
        
        /// <remarks/>
        public event GetDefectCodes4WCCompletedEventHandler GetDefectCodes4WCCompleted;
        
        /// <remarks/>
        public event ValidateDefectCodes4WCCompletedEventHandler ValidateDefectCodes4WCCompleted;
        
        /// <remarks/>
        public event GetActionByDefectCompletedEventHandler GetActionByDefectCompleted;
        
        /// <remarks/>
        public event ValidateActionByDefectCompletedEventHandler ValidateActionByDefectCompleted;
        
        /// <remarks/>
        public event GetResultByActionCompletedEventHandler GetResultByActionCompleted;
        
        /// <remarks/>
        public event GetResultByDefectCompletedEventHandler GetResultByDefectCompleted;
        
        /// <remarks/>
        public event GetECOByPartCompletedEventHandler GetECOByPartCompleted;
        
        /// <remarks/>
        public event InsertSerialECOCompletedEventHandler InsertSerialECOCompleted;
        
        /// <remarks/>
        public event GetSNHistoryCompletedEventHandler GetSNHistoryCompleted;
        
        /// <remarks/>
        public event GetWorkCenterByUserCompletedEventHandler GetWorkCenterByUserCompleted;
        
        /// <remarks/>
        public event GetRoutesByWCCompletedEventHandler GetRoutesByWCCompleted;
        
        /// <remarks/>
        public event GetUnitFAInfoCompletedEventHandler GetUnitFAInfoCompleted;
        
        /// <remarks/>
        public event CompByAssemblyByActionCompletedEventHandler CompByAssemblyByActionCompleted;
        
        /// <remarks/>
        public event GetLastWorkCenterCompletedEventHandler GetLastWorkCenterCompleted;
        
        /// <remarks/>
        public event GetBOMCompletedEventHandler GetBOMCompleted;
        
        /// <remarks/>
        public event GetBOMByDefectActionCompletedEventHandler GetBOMByDefectActionCompleted;
        
        /// <remarks/>
        public event GetInfoNonWOHistoryCompletedEventHandler GetInfoNonWOHistoryCompleted;
        
        /// <remarks/>
        public event ValidateTimeoutByWCCompletedEventHandler ValidateTimeoutByWCCompleted;
        
        /// <remarks/>
        public event ValidateConfigurationCompletedEventHandler ValidateConfigurationCompleted;
        
        /// <remarks/>
        public event GetUnitInfoNonWOXMLCompletedEventHandler GetUnitInfoNonWOXMLCompleted;
        
        /// <remarks/>
        public event GetUserInformationCompletedEventHandler GetUserInformationCompleted;
        
        /// <remarks/>
        public event Get_CodesCompletedEventHandler Get_CodesCompleted;
        
        /// <remarks/>
        public event GetFAFFValuesCompletedEventHandler GetFAFFValuesCompleted;
        
        /// <remarks/>
        public event GetCompFAFFValuesCompletedEventHandler GetCompFAFFValuesCompleted;
        
        /// <remarks/>
        public event GetItemInfoByXMLCompletedEventHandler GetItemInfoByXMLCompleted;
        
        /// <remarks/>
        public event ValidatePartNumbersCompletedEventHandler ValidatePartNumbersCompleted;
        
        /// <remarks/>
        public event GetPartReqByItemCompletedEventHandler GetPartReqByItemCompleted;
        
        /// <remarks/>
        public event GetCascadingBOMCompletedEventHandler GetCascadingBOMCompleted;
        
        /// <remarks/>
        public event GetPartInfoCompletedEventHandler GetPartInfoCompleted;
        
        /// <remarks/>
        public event GetCompFAFFValuesV2CompletedEventHandler GetCompFAFFValuesV2Completed;
        
        /// <remarks/>
        public event GetAlternatePartMainCompletedEventHandler GetAlternatePartMainCompleted;
        
        /// <remarks/>
        public event GetReqTemplateInfoCompletedEventHandler GetReqTemplateInfoCompleted;
        
        /// <remarks/>
        public event GetPartNoDetailsCompletedEventHandler GetPartNoDetailsCompleted;
        
        /// <remarks/>
        public event GetPartNoDetails2CompletedEventHandler GetPartNoDetails2Completed;
        
        /// <remarks/>
        public event GetBCNBySNPNCompletedEventHandler GetBCNBySNPNCompleted;
        
        /// <remarks/>
        public event GetBOMNoDefectActionCompletedEventHandler GetBOMNoDefectActionCompleted;
        
        /// <remarks/>
        public event CheckDefectActionTableCompletedEventHandler CheckDefectActionTableCompleted;
        
        /// <remarks/>
        public event GetAltPartDetailsCompletedEventHandler GetAltPartDetailsCompleted;
        
        /// <remarks/>
        public event GetMatchingCOMPASSYBYACTCompletedEventHandler GetMatchingCOMPASSYBYACTCompleted;
        
        /// <remarks/>
        public event GetBOMRemByDefectActionCompletedEventHandler GetBOMRemByDefectActionCompleted;
        
        /// <remarks/>
        public event GetNonBOMInvByPartCompletedEventHandler GetNonBOMInvByPartCompleted;
        
        /// <remarks/>
        public event GetOwnersConditionCompletedEventHandler GetOwnersConditionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFFValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFFValues(string ffID, string userName) {
            object[] results = this.Invoke("GetFFValues", new object[] {
                        ffID,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFFValuesAsync(string ffID, string userName) {
            this.GetFFValuesAsync(ffID, userName, null);
        }
        
        /// <remarks/>
        public void GetFFValuesAsync(string ffID, string userName, object userState) {
            if ((this.GetFFValuesOperationCompleted == null)) {
                this.GetFFValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFFValuesOperationCompleted);
            }
            this.InvokeAsync("GetFFValues", new object[] {
                        ffID,
                        userName}, this.GetFFValuesOperationCompleted, userState);
        }
        
        private void OnGetFFValuesOperationCompleted(object arg) {
            if ((this.GetFFValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFFValuesCompleted(this, new GetFFValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppControls", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppControls(int geoID, int wcID, int clientID, string contrID, string routeID, string userName) {
            object[] results = this.Invoke("GetAppControls", new object[] {
                        geoID,
                        wcID,
                        clientID,
                        contrID,
                        routeID,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppControlsAsync(int geoID, int wcID, int clientID, string contrID, string routeID, string userName) {
            this.GetAppControlsAsync(geoID, wcID, clientID, contrID, routeID, userName, null);
        }
        
        /// <remarks/>
        public void GetAppControlsAsync(int geoID, int wcID, int clientID, string contrID, string routeID, string userName, object userState) {
            if ((this.GetAppControlsOperationCompleted == null)) {
                this.GetAppControlsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppControlsOperationCompleted);
            }
            this.InvokeAsync("GetAppControls", new object[] {
                        geoID,
                        wcID,
                        clientID,
                        contrID,
                        routeID,
                        userName}, this.GetAppControlsOperationCompleted, userState);
        }
        
        private void OnGetAppControlsOperationCompleted(object arg) {
            if ((this.GetAppControlsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppControlsCompleted(this, new GetAppControlsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartReq", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartReq(string GEO, string clientName, string contrName, string routeName, string actionCode, string asmCode, string userName) {
            object[] results = this.Invoke("GetPartReq", new object[] {
                        GEO,
                        clientName,
                        contrName,
                        routeName,
                        actionCode,
                        asmCode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartReqAsync(string GEO, string clientName, string contrName, string routeName, string actionCode, string asmCode, string userName) {
            this.GetPartReqAsync(GEO, clientName, contrName, routeName, actionCode, asmCode, userName, null);
        }
        
        /// <remarks/>
        public void GetPartReqAsync(string GEO, string clientName, string contrName, string routeName, string actionCode, string asmCode, string userName, object userState) {
            if ((this.GetPartReqOperationCompleted == null)) {
                this.GetPartReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartReqOperationCompleted);
            }
            this.InvokeAsync("GetPartReq", new object[] {
                        GEO,
                        clientName,
                        contrName,
                        routeName,
                        actionCode,
                        asmCode,
                        userName}, this.GetPartReqOperationCompleted, userState);
        }
        
        private void OnGetPartReqOperationCompleted(object arg) {
            if ((this.GetPartReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartReqCompleted(this, new GetPartReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnitInfo(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType) {
            object[] results = this.Invoke("GetUnitInfo", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitInfoAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType) {
            this.GetUnitInfoAsync(UnitIdentificatorValue, IdentificatorType, null);
        }
        
        /// <remarks/>
        public void GetUnitInfoAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, object userState) {
            if ((this.GetUnitInfoOperationCompleted == null)) {
                this.GetUnitInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitInfoOperationCompleted);
            }
            this.InvokeAsync("GetUnitInfo", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType}, this.GetUnitInfoOperationCompleted, userState);
        }
        
        private void OnGetUnitInfoOperationCompleted(object arg) {
            if ((this.GetUnitInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitInfoCompleted(this, new GetUnitInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsTechReturn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsTechReturn(string RidNumber) {
            object[] results = this.Invoke("IsTechReturn", new object[] {
                        RidNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsTechReturnAsync(string RidNumber) {
            this.IsTechReturnAsync(RidNumber, null);
        }
        
        /// <remarks/>
        public void IsTechReturnAsync(string RidNumber, object userState) {
            if ((this.IsTechReturnOperationCompleted == null)) {
                this.IsTechReturnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsTechReturnOperationCompleted);
            }
            this.InvokeAsync("IsTechReturn", new object[] {
                        RidNumber}, this.IsTechReturnOperationCompleted, userState);
        }
        
        private void OnIsTechReturnOperationCompleted(object arg) {
            if ((this.IsTechReturnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsTechReturnCompleted(this, new IsTechReturnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResultCodes(string strBCN) {
            object[] results = this.Invoke("GetResultCodes", new object[] {
                        strBCN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultCodesAsync(string strBCN) {
            this.GetResultCodesAsync(strBCN, null);
        }
        
        /// <remarks/>
        public void GetResultCodesAsync(string strBCN, object userState) {
            if ((this.GetResultCodesOperationCompleted == null)) {
                this.GetResultCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultCodesOperationCompleted);
            }
            this.InvokeAsync("GetResultCodes", new object[] {
                        strBCN}, this.GetResultCodesOperationCompleted, userState);
        }
        
        private void OnGetResultCodesOperationCompleted(object arg) {
            if ((this.GetResultCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultCodesCompleted(this, new GetResultCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextWorkCenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNextWorkCenter(string strRouteId, string strWorkCenterId, string strResultCode) {
            object[] results = this.Invoke("GetNextWorkCenter", new object[] {
                        strRouteId,
                        strWorkCenterId,
                        strResultCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextWorkCenterAsync(string strRouteId, string strWorkCenterId, string strResultCode) {
            this.GetNextWorkCenterAsync(strRouteId, strWorkCenterId, strResultCode, null);
        }
        
        /// <remarks/>
        public void GetNextWorkCenterAsync(string strRouteId, string strWorkCenterId, string strResultCode, object userState) {
            if ((this.GetNextWorkCenterOperationCompleted == null)) {
                this.GetNextWorkCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextWorkCenterOperationCompleted);
            }
            this.InvokeAsync("GetNextWorkCenter", new object[] {
                        strRouteId,
                        strWorkCenterId,
                        strResultCode}, this.GetNextWorkCenterOperationCompleted, userState);
        }
        
        private void OnGetNextWorkCenterOperationCompleted(object arg) {
            if ((this.GetNextWorkCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextWorkCenterCompleted(this, new GetNextWorkCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefectCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefectCodes(GetDefectInfo GetDefectInfo) {
            object[] results = this.Invoke("GetDefectCodes", new object[] {
                        GetDefectInfo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefectCodesAsync(GetDefectInfo GetDefectInfo) {
            this.GetDefectCodesAsync(GetDefectInfo, null);
        }
        
        /// <remarks/>
        public void GetDefectCodesAsync(GetDefectInfo GetDefectInfo, object userState) {
            if ((this.GetDefectCodesOperationCompleted == null)) {
                this.GetDefectCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefectCodesOperationCompleted);
            }
            this.InvokeAsync("GetDefectCodes", new object[] {
                        GetDefectInfo}, this.GetDefectCodesOperationCompleted, userState);
        }
        
        private void OnGetDefectCodesOperationCompleted(object arg) {
            if ((this.GetDefectCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefectCodesCompleted(this, new GetDefectCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsCosmeticDefectOpen", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet IsCosmeticDefectOpen(string strItemId) {
            object[] results = this.Invoke("IsCosmeticDefectOpen", new object[] {
                        strItemId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void IsCosmeticDefectOpenAsync(string strItemId) {
            this.IsCosmeticDefectOpenAsync(strItemId, null);
        }
        
        /// <remarks/>
        public void IsCosmeticDefectOpenAsync(string strItemId, object userState) {
            if ((this.IsCosmeticDefectOpenOperationCompleted == null)) {
                this.IsCosmeticDefectOpenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsCosmeticDefectOpenOperationCompleted);
            }
            this.InvokeAsync("IsCosmeticDefectOpen", new object[] {
                        strItemId}, this.IsCosmeticDefectOpenOperationCompleted, userState);
        }
        
        private void OnIsCosmeticDefectOpenOperationCompleted(object arg) {
            if ((this.IsCosmeticDefectOpenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsCosmeticDefectOpenCompleted(this, new IsCosmeticDefectOpenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitInfoNonWO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnitInfoNonWO(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            object[] results = this.Invoke("GetUnitInfoNonWO", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitInfoNonWOAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            this.GetUnitInfoNonWOAsync(UnitIdentificatorValue, IdentificatorType, UserName, null);
        }
        
        /// <remarks/>
        public void GetUnitInfoNonWOAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName, object userState) {
            if ((this.GetUnitInfoNonWOOperationCompleted == null)) {
                this.GetUnitInfoNonWOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitInfoNonWOOperationCompleted);
            }
            this.InvokeAsync("GetUnitInfoNonWO", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName}, this.GetUnitInfoNonWOOperationCompleted, userState);
        }
        
        private void OnGetUnitInfoNonWOOperationCompleted(object arg) {
            if ((this.GetUnitInfoNonWOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitInfoNonWOCompleted(this, new GetUnitInfoNonWOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnitCount(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            object[] results = this.Invoke("GetUnitCount", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitCountAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            this.GetUnitCountAsync(UnitIdentificatorValue, IdentificatorType, UserName, null);
        }
        
        /// <remarks/>
        public void GetUnitCountAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName, object userState) {
            if ((this.GetUnitCountOperationCompleted == null)) {
                this.GetUnitCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitCountOperationCompleted);
            }
            this.InvokeAsync("GetUnitCount", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName}, this.GetUnitCountOperationCompleted, userState);
        }
        
        private void OnGetUnitCountOperationCompleted(object arg) {
            if ((this.GetUnitCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitCountCompleted(this, new GetUnitCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFFByWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFFByWC(int clientId, string routeName, int contrID, int wcID, string UserName) {
            object[] results = this.Invoke("GetFFByWC", new object[] {
                        clientId,
                        routeName,
                        contrID,
                        wcID,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFFByWCAsync(int clientId, string routeName, int contrID, int wcID, string UserName) {
            this.GetFFByWCAsync(clientId, routeName, contrID, wcID, UserName, null);
        }
        
        /// <remarks/>
        public void GetFFByWCAsync(int clientId, string routeName, int contrID, int wcID, string UserName, object userState) {
            if ((this.GetFFByWCOperationCompleted == null)) {
                this.GetFFByWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFFByWCOperationCompleted);
            }
            this.InvokeAsync("GetFFByWC", new object[] {
                        clientId,
                        routeName,
                        contrID,
                        wcID,
                        UserName}, this.GetFFByWCOperationCompleted, userState);
        }
        
        private void OnGetFFByWCOperationCompleted(object arg) {
            if ((this.GetFFByWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFFByWCCompleted(this, new GetFFByWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOutComeCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOutComeCodes(int itemID, SystemOutComeCodeTypes outComeCodeType, string UserName) {
            object[] results = this.Invoke("GetOutComeCodes", new object[] {
                        itemID,
                        outComeCodeType,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutComeCodesAsync(int itemID, SystemOutComeCodeTypes outComeCodeType, string UserName) {
            this.GetOutComeCodesAsync(itemID, outComeCodeType, UserName, null);
        }
        
        /// <remarks/>
        public void GetOutComeCodesAsync(int itemID, SystemOutComeCodeTypes outComeCodeType, string UserName, object userState) {
            if ((this.GetOutComeCodesOperationCompleted == null)) {
                this.GetOutComeCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutComeCodesOperationCompleted);
            }
            this.InvokeAsync("GetOutComeCodes", new object[] {
                        itemID,
                        outComeCodeType,
                        UserName}, this.GetOutComeCodesOperationCompleted, userState);
        }
        
        private void OnGetOutComeCodesOperationCompleted(object arg) {
            if ((this.GetOutComeCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutComeCodesCompleted(this, new GetOutComeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAssemblyCodes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAssemblyCodes(int itemID, string UserName) {
            object[] results = this.Invoke("GetAssemblyCodes", new object[] {
                        itemID,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssemblyCodesAsync(int itemID, string UserName) {
            this.GetAssemblyCodesAsync(itemID, UserName, null);
        }
        
        /// <remarks/>
        public void GetAssemblyCodesAsync(int itemID, string UserName, object userState) {
            if ((this.GetAssemblyCodesOperationCompleted == null)) {
                this.GetAssemblyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssemblyCodesOperationCompleted);
            }
            this.InvokeAsync("GetAssemblyCodes", new object[] {
                        itemID,
                        UserName}, this.GetAssemblyCodesOperationCompleted, userState);
        }
        
        private void OnGetAssemblyCodesOperationCompleted(object arg) {
            if ((this.GetAssemblyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssemblyCodesCompleted(this, new GetAssemblyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateAssemblyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateAssemblyCode(int itemID, string selectedAssemblyCode, string UserName) {
            object[] results = this.Invoke("ValidateAssemblyCode", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateAssemblyCodeAsync(int itemID, string selectedAssemblyCode, string UserName) {
            this.ValidateAssemblyCodeAsync(itemID, selectedAssemblyCode, UserName, null);
        }
        
        /// <remarks/>
        public void ValidateAssemblyCodeAsync(int itemID, string selectedAssemblyCode, string UserName, object userState) {
            if ((this.ValidateAssemblyCodeOperationCompleted == null)) {
                this.ValidateAssemblyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateAssemblyCodeOperationCompleted);
            }
            this.InvokeAsync("ValidateAssemblyCode", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        UserName}, this.ValidateAssemblyCodeOperationCompleted, userState);
        }
        
        private void OnValidateAssemblyCodeOperationCompleted(object arg) {
            if ((this.ValidateAssemblyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateAssemblyCodeCompleted(this, new ValidateAssemblyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefectCodeByAssembly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefectCodeByAssembly(int itemID, string selectedAssemblyCode, string UserName) {
            object[] results = this.Invoke("GetDefectCodeByAssembly", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefectCodeByAssemblyAsync(int itemID, string selectedAssemblyCode, string UserName) {
            this.GetDefectCodeByAssemblyAsync(itemID, selectedAssemblyCode, UserName, null);
        }
        
        /// <remarks/>
        public void GetDefectCodeByAssemblyAsync(int itemID, string selectedAssemblyCode, string UserName, object userState) {
            if ((this.GetDefectCodeByAssemblyOperationCompleted == null)) {
                this.GetDefectCodeByAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefectCodeByAssemblyOperationCompleted);
            }
            this.InvokeAsync("GetDefectCodeByAssembly", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        UserName}, this.GetDefectCodeByAssemblyOperationCompleted, userState);
        }
        
        private void OnGetDefectCodeByAssemblyOperationCompleted(object arg) {
            if ((this.GetDefectCodeByAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefectCodeByAssemblyCompleted(this, new GetDefectCodeByAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateDefectCodeByAssembly", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateDefectCodeByAssembly(int itemID, string selectedAssemblyCode, string selectedDefectCode, string UserName) {
            object[] results = this.Invoke("ValidateDefectCodeByAssembly", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        selectedDefectCode,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDefectCodeByAssemblyAsync(int itemID, string selectedAssemblyCode, string selectedDefectCode, string UserName) {
            this.ValidateDefectCodeByAssemblyAsync(itemID, selectedAssemblyCode, selectedDefectCode, UserName, null);
        }
        
        /// <remarks/>
        public void ValidateDefectCodeByAssemblyAsync(int itemID, string selectedAssemblyCode, string selectedDefectCode, string UserName, object userState) {
            if ((this.ValidateDefectCodeByAssemblyOperationCompleted == null)) {
                this.ValidateDefectCodeByAssemblyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDefectCodeByAssemblyOperationCompleted);
            }
            this.InvokeAsync("ValidateDefectCodeByAssembly", new object[] {
                        itemID,
                        selectedAssemblyCode,
                        selectedDefectCode,
                        UserName}, this.ValidateDefectCodeByAssemblyOperationCompleted, userState);
        }
        
        private void OnValidateDefectCodeByAssemblyOperationCompleted(object arg) {
            if ((this.ValidateDefectCodeByAssemblyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDefectCodeByAssemblyCompleted(this, new ValidateDefectCodeByAssemblyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefectCodes4WC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefectCodes4WC(int itemID, string UserName) {
            object[] results = this.Invoke("GetDefectCodes4WC", new object[] {
                        itemID,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefectCodes4WCAsync(int itemID, string UserName) {
            this.GetDefectCodes4WCAsync(itemID, UserName, null);
        }
        
        /// <remarks/>
        public void GetDefectCodes4WCAsync(int itemID, string UserName, object userState) {
            if ((this.GetDefectCodes4WCOperationCompleted == null)) {
                this.GetDefectCodes4WCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefectCodes4WCOperationCompleted);
            }
            this.InvokeAsync("GetDefectCodes4WC", new object[] {
                        itemID,
                        UserName}, this.GetDefectCodes4WCOperationCompleted, userState);
        }
        
        private void OnGetDefectCodes4WCOperationCompleted(object arg) {
            if ((this.GetDefectCodes4WCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefectCodes4WCCompleted(this, new GetDefectCodes4WCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateDefectCodes4WC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateDefectCodes4WC(int itemID, string selectedDefectCode, string UserName) {
            object[] results = this.Invoke("ValidateDefectCodes4WC", new object[] {
                        itemID,
                        selectedDefectCode,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateDefectCodes4WCAsync(int itemID, string selectedDefectCode, string UserName) {
            this.ValidateDefectCodes4WCAsync(itemID, selectedDefectCode, UserName, null);
        }
        
        /// <remarks/>
        public void ValidateDefectCodes4WCAsync(int itemID, string selectedDefectCode, string UserName, object userState) {
            if ((this.ValidateDefectCodes4WCOperationCompleted == null)) {
                this.ValidateDefectCodes4WCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateDefectCodes4WCOperationCompleted);
            }
            this.InvokeAsync("ValidateDefectCodes4WC", new object[] {
                        itemID,
                        selectedDefectCode,
                        UserName}, this.ValidateDefectCodes4WCOperationCompleted, userState);
        }
        
        private void OnValidateDefectCodes4WCOperationCompleted(object arg) {
            if ((this.ValidateDefectCodes4WCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateDefectCodes4WCCompleted(this, new ValidateDefectCodes4WCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActionByDefect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActionByDefect(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string userName) {
            object[] results = this.Invoke("GetActionByDefect", new object[] {
                        clientName,
                        contrName,
                        geoName,
                        routeName,
                        wcName,
                        defCode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActionByDefectAsync(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string userName) {
            this.GetActionByDefectAsync(clientName, contrName, geoName, routeName, wcName, defCode, userName, null);
        }
        
        /// <remarks/>
        public void GetActionByDefectAsync(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string userName, object userState) {
            if ((this.GetActionByDefectOperationCompleted == null)) {
                this.GetActionByDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActionByDefectOperationCompleted);
            }
            this.InvokeAsync("GetActionByDefect", new object[] {
                        clientName,
                        contrName,
                        geoName,
                        routeName,
                        wcName,
                        defCode,
                        userName}, this.GetActionByDefectOperationCompleted, userState);
        }
        
        private void OnGetActionByDefectOperationCompleted(object arg) {
            if ((this.GetActionByDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActionByDefectCompleted(this, new GetActionByDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateActionByDefect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateActionByDefect(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string actCode, string userName) {
            object[] results = this.Invoke("ValidateActionByDefect", new object[] {
                        clientName,
                        contrName,
                        geoName,
                        routeName,
                        wcName,
                        defCode,
                        actCode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateActionByDefectAsync(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string actCode, string userName) {
            this.ValidateActionByDefectAsync(clientName, contrName, geoName, routeName, wcName, defCode, actCode, userName, null);
        }
        
        /// <remarks/>
        public void ValidateActionByDefectAsync(string clientName, string contrName, string geoName, string routeName, string wcName, string defCode, string actCode, string userName, object userState) {
            if ((this.ValidateActionByDefectOperationCompleted == null)) {
                this.ValidateActionByDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateActionByDefectOperationCompleted);
            }
            this.InvokeAsync("ValidateActionByDefect", new object[] {
                        clientName,
                        contrName,
                        geoName,
                        routeName,
                        wcName,
                        defCode,
                        actCode,
                        userName}, this.ValidateActionByDefectOperationCompleted, userState);
        }
        
        private void OnValidateActionByDefectOperationCompleted(object arg) {
            if ((this.ValidateActionByDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateActionByDefectCompleted(this, new ValidateActionByDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultByAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResultByAction(int itemID, string selectedActionCode, string UserName) {
            object[] results = this.Invoke("GetResultByAction", new object[] {
                        itemID,
                        selectedActionCode,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultByActionAsync(int itemID, string selectedActionCode, string UserName) {
            this.GetResultByActionAsync(itemID, selectedActionCode, UserName, null);
        }
        
        /// <remarks/>
        public void GetResultByActionAsync(int itemID, string selectedActionCode, string UserName, object userState) {
            if ((this.GetResultByActionOperationCompleted == null)) {
                this.GetResultByActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByActionOperationCompleted);
            }
            this.InvokeAsync("GetResultByAction", new object[] {
                        itemID,
                        selectedActionCode,
                        UserName}, this.GetResultByActionOperationCompleted, userState);
        }
        
        private void OnGetResultByActionOperationCompleted(object arg) {
            if ((this.GetResultByActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultByActionCompleted(this, new GetResultByActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetResultByDefect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetResultByDefect(int itemID, int selectedDefectID, string UserName) {
            object[] results = this.Invoke("GetResultByDefect", new object[] {
                        itemID,
                        selectedDefectID,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetResultByDefectAsync(int itemID, int selectedDefectID, string UserName) {
            this.GetResultByDefectAsync(itemID, selectedDefectID, UserName, null);
        }
        
        /// <remarks/>
        public void GetResultByDefectAsync(int itemID, int selectedDefectID, string UserName, object userState) {
            if ((this.GetResultByDefectOperationCompleted == null)) {
                this.GetResultByDefectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetResultByDefectOperationCompleted);
            }
            this.InvokeAsync("GetResultByDefect", new object[] {
                        itemID,
                        selectedDefectID,
                        UserName}, this.GetResultByDefectOperationCompleted, userState);
        }
        
        private void OnGetResultByDefectOperationCompleted(object arg) {
            if ((this.GetResultByDefectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetResultByDefectCompleted(this, new GetResultByDefectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetECOByPart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetECOByPart(string clientName, string partNo, string UserName) {
            object[] results = this.Invoke("GetECOByPart", new object[] {
                        clientName,
                        partNo,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetECOByPartAsync(string clientName, string partNo, string UserName) {
            this.GetECOByPartAsync(clientName, partNo, UserName, null);
        }
        
        /// <remarks/>
        public void GetECOByPartAsync(string clientName, string partNo, string UserName, object userState) {
            if ((this.GetECOByPartOperationCompleted == null)) {
                this.GetECOByPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECOByPartOperationCompleted);
            }
            this.InvokeAsync("GetECOByPart", new object[] {
                        clientName,
                        partNo,
                        UserName}, this.GetECOByPartOperationCompleted, userState);
        }
        
        private void OnGetECOByPartOperationCompleted(object arg) {
            if ((this.GetECOByPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECOByPartCompleted(this, new GetECOByPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSerialECO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertSerialECO(string clientName, string partNo, string serial, string ecoCode, string ecoClose, string UserName) {
            object[] results = this.Invoke("InsertSerialECO", new object[] {
                        clientName,
                        partNo,
                        serial,
                        ecoCode,
                        ecoClose,
                        UserName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSerialECOAsync(string clientName, string partNo, string serial, string ecoCode, string ecoClose, string UserName) {
            this.InsertSerialECOAsync(clientName, partNo, serial, ecoCode, ecoClose, UserName, null);
        }
        
        /// <remarks/>
        public void InsertSerialECOAsync(string clientName, string partNo, string serial, string ecoCode, string ecoClose, string UserName, object userState) {
            if ((this.InsertSerialECOOperationCompleted == null)) {
                this.InsertSerialECOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSerialECOOperationCompleted);
            }
            this.InvokeAsync("InsertSerialECO", new object[] {
                        clientName,
                        partNo,
                        serial,
                        ecoCode,
                        ecoClose,
                        UserName}, this.InsertSerialECOOperationCompleted, userState);
        }
        
        private void OnInsertSerialECOOperationCompleted(object arg) {
            if ((this.InsertSerialECOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSerialECOCompleted(this, new InsertSerialECOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSNHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSNHistory(string clientName, string serialNo, string partNo, string UserName) {
            object[] results = this.Invoke("GetSNHistory", new object[] {
                        clientName,
                        serialNo,
                        partNo,
                        UserName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSNHistoryAsync(string clientName, string serialNo, string partNo, string UserName) {
            this.GetSNHistoryAsync(clientName, serialNo, partNo, UserName, null);
        }
        
        /// <remarks/>
        public void GetSNHistoryAsync(string clientName, string serialNo, string partNo, string UserName, object userState) {
            if ((this.GetSNHistoryOperationCompleted == null)) {
                this.GetSNHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSNHistoryOperationCompleted);
            }
            this.InvokeAsync("GetSNHistory", new object[] {
                        clientName,
                        serialNo,
                        partNo,
                        UserName}, this.GetSNHistoryOperationCompleted, userState);
        }
        
        private void OnGetSNHistoryOperationCompleted(object arg) {
            if ((this.GetSNHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSNHistoryCompleted(this, new GetSNHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWorkCenterByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkCenterByUser(string UserName) {
            object[] results = this.Invoke("GetWorkCenterByUser", new object[] {
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkCenterByUserAsync(string UserName) {
            this.GetWorkCenterByUserAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetWorkCenterByUserAsync(string UserName, object userState) {
            if ((this.GetWorkCenterByUserOperationCompleted == null)) {
                this.GetWorkCenterByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkCenterByUserOperationCompleted);
            }
            this.InvokeAsync("GetWorkCenterByUser", new object[] {
                        UserName}, this.GetWorkCenterByUserOperationCompleted, userState);
        }
        
        private void OnGetWorkCenterByUserOperationCompleted(object arg) {
            if ((this.GetWorkCenterByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkCenterByUserCompleted(this, new GetWorkCenterByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoutesByWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRoutesByWC(string workcenterName, string UserName) {
            object[] results = this.Invoke("GetRoutesByWC", new object[] {
                        workcenterName,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoutesByWCAsync(string workcenterName, string UserName) {
            this.GetRoutesByWCAsync(workcenterName, UserName, null);
        }
        
        /// <remarks/>
        public void GetRoutesByWCAsync(string workcenterName, string UserName, object userState) {
            if ((this.GetRoutesByWCOperationCompleted == null)) {
                this.GetRoutesByWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoutesByWCOperationCompleted);
            }
            this.InvokeAsync("GetRoutesByWC", new object[] {
                        workcenterName,
                        UserName}, this.GetRoutesByWCOperationCompleted, userState);
        }
        
        private void OnGetRoutesByWCOperationCompleted(object arg) {
            if ((this.GetRoutesByWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoutesByWCCompleted(this, new GetRoutesByWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitFAInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnitFAInfo(int itemId, string UserName) {
            object[] results = this.Invoke("GetUnitFAInfo", new object[] {
                        itemId,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitFAInfoAsync(int itemId, string UserName) {
            this.GetUnitFAInfoAsync(itemId, UserName, null);
        }
        
        /// <remarks/>
        public void GetUnitFAInfoAsync(int itemId, string UserName, object userState) {
            if ((this.GetUnitFAInfoOperationCompleted == null)) {
                this.GetUnitFAInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitFAInfoOperationCompleted);
            }
            this.InvokeAsync("GetUnitFAInfo", new object[] {
                        itemId,
                        UserName}, this.GetUnitFAInfoOperationCompleted, userState);
        }
        
        private void OnGetUnitFAInfoOperationCompleted(object arg) {
            if ((this.GetUnitFAInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitFAInfoCompleted(this, new GetUnitFAInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompByAssemblyByAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CompByAssemblyByAction(string partNo, string assemblyName, string UserName) {
            object[] results = this.Invoke("CompByAssemblyByAction", new object[] {
                        partNo,
                        assemblyName,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CompByAssemblyByActionAsync(string partNo, string assemblyName, string UserName) {
            this.CompByAssemblyByActionAsync(partNo, assemblyName, UserName, null);
        }
        
        /// <remarks/>
        public void CompByAssemblyByActionAsync(string partNo, string assemblyName, string UserName, object userState) {
            if ((this.CompByAssemblyByActionOperationCompleted == null)) {
                this.CompByAssemblyByActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompByAssemblyByActionOperationCompleted);
            }
            this.InvokeAsync("CompByAssemblyByAction", new object[] {
                        partNo,
                        assemblyName,
                        UserName}, this.CompByAssemblyByActionOperationCompleted, userState);
        }
        
        private void OnCompByAssemblyByActionOperationCompleted(object arg) {
            if ((this.CompByAssemblyByActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompByAssemblyByActionCompleted(this, new CompByAssemblyByActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLastWorkCenter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLastWorkCenter(int itemId, string UserName) {
            object[] results = this.Invoke("GetLastWorkCenter", new object[] {
                        itemId,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLastWorkCenterAsync(int itemId, string UserName) {
            this.GetLastWorkCenterAsync(itemId, UserName, null);
        }
        
        /// <remarks/>
        public void GetLastWorkCenterAsync(int itemId, string UserName, object userState) {
            if ((this.GetLastWorkCenterOperationCompleted == null)) {
                this.GetLastWorkCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLastWorkCenterOperationCompleted);
            }
            this.InvokeAsync("GetLastWorkCenter", new object[] {
                        itemId,
                        UserName}, this.GetLastWorkCenterOperationCompleted, userState);
        }
        
        private void OnGetLastWorkCenterOperationCompleted(object arg) {
            if ((this.GetLastWorkCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLastWorkCenterCompleted(this, new GetLastWorkCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBOM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBOM(string partNo, int itemId, int defectCodeId, string assemblyName, string UserName) {
            object[] results = this.Invoke("GetBOM", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMAsync(string partNo, int itemId, int defectCodeId, string assemblyName, string UserName) {
            this.GetBOMAsync(partNo, itemId, defectCodeId, assemblyName, UserName, null);
        }
        
        /// <remarks/>
        public void GetBOMAsync(string partNo, int itemId, int defectCodeId, string assemblyName, string UserName, object userState) {
            if ((this.GetBOMOperationCompleted == null)) {
                this.GetBOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMOperationCompleted);
            }
            this.InvokeAsync("GetBOM", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        UserName}, this.GetBOMOperationCompleted, userState);
        }
        
        private void OnGetBOMOperationCompleted(object arg) {
            if ((this.GetBOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMCompleted(this, new GetBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBOMByDefectAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBOMByDefectAction(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName) {
            object[] results = this.Invoke("GetBOMByDefectAction", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        actionCodeId,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMByDefectActionAsync(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName) {
            this.GetBOMByDefectActionAsync(partNo, itemId, defectCodeId, assemblyName, actionCodeId, UserName, null);
        }
        
        /// <remarks/>
        public void GetBOMByDefectActionAsync(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName, object userState) {
            if ((this.GetBOMByDefectActionOperationCompleted == null)) {
                this.GetBOMByDefectActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMByDefectActionOperationCompleted);
            }
            this.InvokeAsync("GetBOMByDefectAction", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        actionCodeId,
                        UserName}, this.GetBOMByDefectActionOperationCompleted, userState);
        }
        
        private void OnGetBOMByDefectActionOperationCompleted(object arg) {
            if ((this.GetBOMByDefectActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMByDefectActionCompleted(this, new GetBOMByDefectActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoNonWOHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetInfoNonWOHistory(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string Span, string UserName) {
            object[] results = this.Invoke("GetInfoNonWOHistory", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        Span,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoNonWOHistoryAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string Span, string UserName) {
            this.GetInfoNonWOHistoryAsync(UnitIdentificatorValue, IdentificatorType, Span, UserName, null);
        }
        
        /// <remarks/>
        public void GetInfoNonWOHistoryAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string Span, string UserName, object userState) {
            if ((this.GetInfoNonWOHistoryOperationCompleted == null)) {
                this.GetInfoNonWOHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoNonWOHistoryOperationCompleted);
            }
            this.InvokeAsync("GetInfoNonWOHistory", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        Span,
                        UserName}, this.GetInfoNonWOHistoryOperationCompleted, userState);
        }
        
        private void OnGetInfoNonWOHistoryOperationCompleted(object arg) {
            if ((this.GetInfoNonWOHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoNonWOHistoryCompleted(this, new GetInfoNonWOHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateTimeoutByWC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ValidateTimeoutByWC(int ItemID, string Workcenter) {
            object[] results = this.Invoke("ValidateTimeoutByWC", new object[] {
                        ItemID,
                        Workcenter});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateTimeoutByWCAsync(int ItemID, string Workcenter) {
            this.ValidateTimeoutByWCAsync(ItemID, Workcenter, null);
        }
        
        /// <remarks/>
        public void ValidateTimeoutByWCAsync(int ItemID, string Workcenter, object userState) {
            if ((this.ValidateTimeoutByWCOperationCompleted == null)) {
                this.ValidateTimeoutByWCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateTimeoutByWCOperationCompleted);
            }
            this.InvokeAsync("ValidateTimeoutByWC", new object[] {
                        ItemID,
                        Workcenter}, this.ValidateTimeoutByWCOperationCompleted, userState);
        }
        
        private void OnValidateTimeoutByWCOperationCompleted(object arg) {
            if ((this.ValidateTimeoutByWCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateTimeoutByWCCompleted(this, new ValidateTimeoutByWCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidateConfiguration", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateConfiguration(int LocationId, int ClientId, int ContractId, int WorkcenterId, string ProcessName, string HostName) {
            object[] results = this.Invoke("ValidateConfiguration", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        WorkcenterId,
                        ProcessName,
                        HostName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateConfigurationAsync(int LocationId, int ClientId, int ContractId, int WorkcenterId, string ProcessName, string HostName) {
            this.ValidateConfigurationAsync(LocationId, ClientId, ContractId, WorkcenterId, ProcessName, HostName, null);
        }
        
        /// <remarks/>
        public void ValidateConfigurationAsync(int LocationId, int ClientId, int ContractId, int WorkcenterId, string ProcessName, string HostName, object userState) {
            if ((this.ValidateConfigurationOperationCompleted == null)) {
                this.ValidateConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateConfigurationOperationCompleted);
            }
            this.InvokeAsync("ValidateConfiguration", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        WorkcenterId,
                        ProcessName,
                        HostName}, this.ValidateConfigurationOperationCompleted, userState);
        }
        
        private void OnValidateConfigurationOperationCompleted(object arg) {
            if ((this.ValidateConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateConfigurationCompleted(this, new ValidateConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnitInfoNonWOXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUnitInfoNonWOXML(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            object[] results = this.Invoke("GetUnitInfoNonWOXML", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnitInfoNonWOXMLAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName) {
            this.GetUnitInfoNonWOXMLAsync(UnitIdentificatorValue, IdentificatorType, UserName, null);
        }
        
        /// <remarks/>
        public void GetUnitInfoNonWOXMLAsync(string UnitIdentificatorValue, IdentificatorTypes IdentificatorType, string UserName, object userState) {
            if ((this.GetUnitInfoNonWOXMLOperationCompleted == null)) {
                this.GetUnitInfoNonWOXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnitInfoNonWOXMLOperationCompleted);
            }
            this.InvokeAsync("GetUnitInfoNonWOXML", new object[] {
                        UnitIdentificatorValue,
                        IdentificatorType,
                        UserName}, this.GetUnitInfoNonWOXMLOperationCompleted, userState);
        }
        
        private void OnGetUnitInfoNonWOXMLOperationCompleted(object arg) {
            if ((this.GetUnitInfoNonWOXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnitInfoNonWOXMLCompleted(this, new GetUnitInfoNonWOXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserInformation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserInformation GetUserInformation(string userLogin) {
            object[] results = this.Invoke("GetUserInformation", new object[] {
                        userLogin});
            return ((UserInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string userLogin) {
            this.GetUserInformationAsync(userLogin, null);
        }
        
        /// <remarks/>
        public void GetUserInformationAsync(string userLogin, object userState) {
            if ((this.GetUserInformationOperationCompleted == null)) {
                this.GetUserInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInformationOperationCompleted);
            }
            this.InvokeAsync("GetUserInformation", new object[] {
                        userLogin}, this.GetUserInformationOperationCompleted, userState);
        }
        
        private void OnGetUserInformationOperationCompleted(object arg) {
            if ((this.GetUserInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInformationCompleted(this, new GetUserInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Get_Codes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Codes(string Item, string item_pn, string value_type, string code_type, string code_name, string custom, string Username) {
            object[] results = this.Invoke("Get_Codes", new object[] {
                        Item,
                        item_pn,
                        value_type,
                        code_type,
                        code_name,
                        custom,
                        Username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_CodesAsync(string Item, string item_pn, string value_type, string code_type, string code_name, string custom, string Username) {
            this.Get_CodesAsync(Item, item_pn, value_type, code_type, code_name, custom, Username, null);
        }
        
        /// <remarks/>
        public void Get_CodesAsync(string Item, string item_pn, string value_type, string code_type, string code_name, string custom, string Username, object userState) {
            if ((this.Get_CodesOperationCompleted == null)) {
                this.Get_CodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_CodesOperationCompleted);
            }
            this.InvokeAsync("Get_Codes", new object[] {
                        Item,
                        item_pn,
                        value_type,
                        code_type,
                        code_name,
                        custom,
                        Username}, this.Get_CodesOperationCompleted, userState);
        }
        
        private void OnGet_CodesOperationCompleted(object arg) {
            if ((this.Get_CodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_CodesCompleted(this, new Get_CodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFAFFValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFAFFValues(string Item, string ListType, string CodeIn, string Username) {
            object[] results = this.Invoke("GetFAFFValues", new object[] {
                        Item,
                        ListType,
                        CodeIn,
                        Username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFAFFValuesAsync(string Item, string ListType, string CodeIn, string Username) {
            this.GetFAFFValuesAsync(Item, ListType, CodeIn, Username, null);
        }
        
        /// <remarks/>
        public void GetFAFFValuesAsync(string Item, string ListType, string CodeIn, string Username, object userState) {
            if ((this.GetFAFFValuesOperationCompleted == null)) {
                this.GetFAFFValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFAFFValuesOperationCompleted);
            }
            this.InvokeAsync("GetFAFFValues", new object[] {
                        Item,
                        ListType,
                        CodeIn,
                        Username}, this.GetFAFFValuesOperationCompleted, userState);
        }
        
        private void OnGetFAFFValuesOperationCompleted(object arg) {
            if ((this.GetFAFFValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFAFFValuesCompleted(this, new GetFAFFValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompFAFFValues", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompFAFFValues(string Item, string DefCodeValue, string ActCodeValue, string CodeValue, string Username) {
            object[] results = this.Invoke("GetCompFAFFValues", new object[] {
                        Item,
                        DefCodeValue,
                        ActCodeValue,
                        CodeValue,
                        Username});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompFAFFValuesAsync(string Item, string DefCodeValue, string ActCodeValue, string CodeValue, string Username) {
            this.GetCompFAFFValuesAsync(Item, DefCodeValue, ActCodeValue, CodeValue, Username, null);
        }
        
        /// <remarks/>
        public void GetCompFAFFValuesAsync(string Item, string DefCodeValue, string ActCodeValue, string CodeValue, string Username, object userState) {
            if ((this.GetCompFAFFValuesOperationCompleted == null)) {
                this.GetCompFAFFValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompFAFFValuesOperationCompleted);
            }
            this.InvokeAsync("GetCompFAFFValues", new object[] {
                        Item,
                        DefCodeValue,
                        ActCodeValue,
                        CodeValue,
                        Username}, this.GetCompFAFFValuesOperationCompleted, userState);
        }
        
        private void OnGetCompFAFFValuesOperationCompleted(object arg) {
            if ((this.GetCompFAFFValuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompFAFFValuesCompleted(this, new GetCompFAFFValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetItemInfoByXML", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetItemInfoByXML(string xmlLoad) {
            object[] results = this.Invoke("GetItemInfoByXML", new object[] {
                        xmlLoad});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemInfoByXMLAsync(string xmlLoad) {
            this.GetItemInfoByXMLAsync(xmlLoad, null);
        }
        
        /// <remarks/>
        public void GetItemInfoByXMLAsync(string xmlLoad, object userState) {
            if ((this.GetItemInfoByXMLOperationCompleted == null)) {
                this.GetItemInfoByXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemInfoByXMLOperationCompleted);
            }
            this.InvokeAsync("GetItemInfoByXML", new object[] {
                        xmlLoad}, this.GetItemInfoByXMLOperationCompleted, userState);
        }
        
        private void OnGetItemInfoByXMLOperationCompleted(object arg) {
            if ((this.GetItemInfoByXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemInfoByXMLCompleted(this, new GetItemInfoByXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValidatePartNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidatePartNumbers(string PartNumbers, string UserName) {
            object[] results = this.Invoke("ValidatePartNumbers", new object[] {
                        PartNumbers,
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidatePartNumbersAsync(string PartNumbers, string UserName) {
            this.ValidatePartNumbersAsync(PartNumbers, UserName, null);
        }
        
        /// <remarks/>
        public void ValidatePartNumbersAsync(string PartNumbers, string UserName, object userState) {
            if ((this.ValidatePartNumbersOperationCompleted == null)) {
                this.ValidatePartNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidatePartNumbersOperationCompleted);
            }
            this.InvokeAsync("ValidatePartNumbers", new object[] {
                        PartNumbers,
                        UserName}, this.ValidatePartNumbersOperationCompleted, userState);
        }
        
        private void OnValidatePartNumbersOperationCompleted(object arg) {
            if ((this.ValidatePartNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidatePartNumbersCompleted(this, new ValidatePartNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartReqByItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartReqByItem(int itemID, string AssemblyCode, string ActionCode, string userName) {
            object[] results = this.Invoke("GetPartReqByItem", new object[] {
                        itemID,
                        AssemblyCode,
                        ActionCode,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartReqByItemAsync(int itemID, string AssemblyCode, string ActionCode, string userName) {
            this.GetPartReqByItemAsync(itemID, AssemblyCode, ActionCode, userName, null);
        }
        
        /// <remarks/>
        public void GetPartReqByItemAsync(int itemID, string AssemblyCode, string ActionCode, string userName, object userState) {
            if ((this.GetPartReqByItemOperationCompleted == null)) {
                this.GetPartReqByItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartReqByItemOperationCompleted);
            }
            this.InvokeAsync("GetPartReqByItem", new object[] {
                        itemID,
                        AssemblyCode,
                        ActionCode,
                        userName}, this.GetPartReqByItemOperationCompleted, userState);
        }
        
        private void OnGetPartReqByItemOperationCompleted(object arg) {
            if ((this.GetPartReqByItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartReqByItemCompleted(this, new GetPartReqByItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCascadingBOM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCascadingBOM(int LocationId, int WorkCenterId, int itemId, string partNumber, string AssemblyCode, int defectCodeId, int ActionCodeID, string RequestType, string RequestValue, string UseOwnerCond, string OwnerId, string ConditionId, string userName) {
            object[] results = this.Invoke("GetCascadingBOM", new object[] {
                        LocationId,
                        WorkCenterId,
                        itemId,
                        partNumber,
                        AssemblyCode,
                        defectCodeId,
                        ActionCodeID,
                        RequestType,
                        RequestValue,
                        UseOwnerCond,
                        OwnerId,
                        ConditionId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCascadingBOMAsync(int LocationId, int WorkCenterId, int itemId, string partNumber, string AssemblyCode, int defectCodeId, int ActionCodeID, string RequestType, string RequestValue, string UseOwnerCond, string OwnerId, string ConditionId, string userName) {
            this.GetCascadingBOMAsync(LocationId, WorkCenterId, itemId, partNumber, AssemblyCode, defectCodeId, ActionCodeID, RequestType, RequestValue, UseOwnerCond, OwnerId, ConditionId, userName, null);
        }
        
        /// <remarks/>
        public void GetCascadingBOMAsync(int LocationId, int WorkCenterId, int itemId, string partNumber, string AssemblyCode, int defectCodeId, int ActionCodeID, string RequestType, string RequestValue, string UseOwnerCond, string OwnerId, string ConditionId, string userName, object userState) {
            if ((this.GetCascadingBOMOperationCompleted == null)) {
                this.GetCascadingBOMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCascadingBOMOperationCompleted);
            }
            this.InvokeAsync("GetCascadingBOM", new object[] {
                        LocationId,
                        WorkCenterId,
                        itemId,
                        partNumber,
                        AssemblyCode,
                        defectCodeId,
                        ActionCodeID,
                        RequestType,
                        RequestValue,
                        UseOwnerCond,
                        OwnerId,
                        ConditionId,
                        userName}, this.GetCascadingBOMOperationCompleted, userState);
        }
        
        private void OnGetCascadingBOMOperationCompleted(object arg) {
            if ((this.GetCascadingBOMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCascadingBOMCompleted(this, new GetCascadingBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartInfo(int LocationId, int itemId, int WorkCenterId, int BOMId, int partId, string KITBOMId, string AltPartId, string AltPartPKId, string AssemblyCode, string ActionName, string userName) {
            object[] results = this.Invoke("GetPartInfo", new object[] {
                        LocationId,
                        itemId,
                        WorkCenterId,
                        BOMId,
                        partId,
                        KITBOMId,
                        AltPartId,
                        AltPartPKId,
                        AssemblyCode,
                        ActionName,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartInfoAsync(int LocationId, int itemId, int WorkCenterId, int BOMId, int partId, string KITBOMId, string AltPartId, string AltPartPKId, string AssemblyCode, string ActionName, string userName) {
            this.GetPartInfoAsync(LocationId, itemId, WorkCenterId, BOMId, partId, KITBOMId, AltPartId, AltPartPKId, AssemblyCode, ActionName, userName, null);
        }
        
        /// <remarks/>
        public void GetPartInfoAsync(int LocationId, int itemId, int WorkCenterId, int BOMId, int partId, string KITBOMId, string AltPartId, string AltPartPKId, string AssemblyCode, string ActionName, string userName, object userState) {
            if ((this.GetPartInfoOperationCompleted == null)) {
                this.GetPartInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartInfoOperationCompleted);
            }
            this.InvokeAsync("GetPartInfo", new object[] {
                        LocationId,
                        itemId,
                        WorkCenterId,
                        BOMId,
                        partId,
                        KITBOMId,
                        AltPartId,
                        AltPartPKId,
                        AssemblyCode,
                        ActionName,
                        userName}, this.GetPartInfoOperationCompleted, userState);
        }
        
        private void OnGetPartInfoOperationCompleted(object arg) {
            if ((this.GetPartInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartInfoCompleted(this, new GetPartInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompFAFFValuesV2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompFAFFValuesV2(int itemId, string BOMValue, string CodeValue, string userName) {
            object[] results = this.Invoke("GetCompFAFFValuesV2", new object[] {
                        itemId,
                        BOMValue,
                        CodeValue,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompFAFFValuesV2Async(int itemId, string BOMValue, string CodeValue, string userName) {
            this.GetCompFAFFValuesV2Async(itemId, BOMValue, CodeValue, userName, null);
        }
        
        /// <remarks/>
        public void GetCompFAFFValuesV2Async(int itemId, string BOMValue, string CodeValue, string userName, object userState) {
            if ((this.GetCompFAFFValuesV2OperationCompleted == null)) {
                this.GetCompFAFFValuesV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompFAFFValuesV2OperationCompleted);
            }
            this.InvokeAsync("GetCompFAFFValuesV2", new object[] {
                        itemId,
                        BOMValue,
                        CodeValue,
                        userName}, this.GetCompFAFFValuesV2OperationCompleted, userState);
        }
        
        private void OnGetCompFAFFValuesV2OperationCompleted(object arg) {
            if ((this.GetCompFAFFValuesV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompFAFFValuesV2Completed(this, new GetCompFAFFValuesV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlternatePartMain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAlternatePartMain(string LocationId, string ClientId, string ContractId, string PartId, string OwnerId, string ConditionId, string WarehouseId, string StLocationId, string BinId, string BOMId, string userName) {
            object[] results = this.Invoke("GetAlternatePartMain", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        PartId,
                        OwnerId,
                        ConditionId,
                        WarehouseId,
                        StLocationId,
                        BinId,
                        BOMId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlternatePartMainAsync(string LocationId, string ClientId, string ContractId, string PartId, string OwnerId, string ConditionId, string WarehouseId, string StLocationId, string BinId, string BOMId, string userName) {
            this.GetAlternatePartMainAsync(LocationId, ClientId, ContractId, PartId, OwnerId, ConditionId, WarehouseId, StLocationId, BinId, BOMId, userName, null);
        }
        
        /// <remarks/>
        public void GetAlternatePartMainAsync(string LocationId, string ClientId, string ContractId, string PartId, string OwnerId, string ConditionId, string WarehouseId, string StLocationId, string BinId, string BOMId, string userName, object userState) {
            if ((this.GetAlternatePartMainOperationCompleted == null)) {
                this.GetAlternatePartMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlternatePartMainOperationCompleted);
            }
            this.InvokeAsync("GetAlternatePartMain", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        PartId,
                        OwnerId,
                        ConditionId,
                        WarehouseId,
                        StLocationId,
                        BinId,
                        BOMId,
                        userName}, this.GetAlternatePartMainOperationCompleted, userState);
        }
        
        private void OnGetAlternatePartMainOperationCompleted(object arg) {
            if ((this.GetAlternatePartMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlternatePartMainCompleted(this, new GetAlternatePartMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReqTemplateInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetReqTemplateInfo(string LocationId, string ClientId, string ContractId, string OrderProcessTypeId, string WorkCenterId, string userName) {
            object[] results = this.Invoke("GetReqTemplateInfo", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        OrderProcessTypeId,
                        WorkCenterId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetReqTemplateInfoAsync(string LocationId, string ClientId, string ContractId, string OrderProcessTypeId, string WorkCenterId, string userName) {
            this.GetReqTemplateInfoAsync(LocationId, ClientId, ContractId, OrderProcessTypeId, WorkCenterId, userName, null);
        }
        
        /// <remarks/>
        public void GetReqTemplateInfoAsync(string LocationId, string ClientId, string ContractId, string OrderProcessTypeId, string WorkCenterId, string userName, object userState) {
            if ((this.GetReqTemplateInfoOperationCompleted == null)) {
                this.GetReqTemplateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReqTemplateInfoOperationCompleted);
            }
            this.InvokeAsync("GetReqTemplateInfo", new object[] {
                        LocationId,
                        ClientId,
                        ContractId,
                        OrderProcessTypeId,
                        WorkCenterId,
                        userName}, this.GetReqTemplateInfoOperationCompleted, userState);
        }
        
        private void OnGetReqTemplateInfoOperationCompleted(object arg) {
            if ((this.GetReqTemplateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReqTemplateInfoCompleted(this, new GetReqTemplateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartNoDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartNoDetails(string PartId, string ParentPartId, string OwnerId, string ConditionId, string LocationId, string WarehouseId, string StLocationId, string BinId, string BOMId, string KITBOMId, string userName) {
            object[] results = this.Invoke("GetPartNoDetails", new object[] {
                        PartId,
                        ParentPartId,
                        OwnerId,
                        ConditionId,
                        LocationId,
                        WarehouseId,
                        StLocationId,
                        BinId,
                        BOMId,
                        KITBOMId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartNoDetailsAsync(string PartId, string ParentPartId, string OwnerId, string ConditionId, string LocationId, string WarehouseId, string StLocationId, string BinId, string BOMId, string KITBOMId, string userName) {
            this.GetPartNoDetailsAsync(PartId, ParentPartId, OwnerId, ConditionId, LocationId, WarehouseId, StLocationId, BinId, BOMId, KITBOMId, userName, null);
        }
        
        /// <remarks/>
        public void GetPartNoDetailsAsync(string PartId, string ParentPartId, string OwnerId, string ConditionId, string LocationId, string WarehouseId, string StLocationId, string BinId, string BOMId, string KITBOMId, string userName, object userState) {
            if ((this.GetPartNoDetailsOperationCompleted == null)) {
                this.GetPartNoDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartNoDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPartNoDetails", new object[] {
                        PartId,
                        ParentPartId,
                        OwnerId,
                        ConditionId,
                        LocationId,
                        WarehouseId,
                        StLocationId,
                        BinId,
                        BOMId,
                        KITBOMId,
                        userName}, this.GetPartNoDetailsOperationCompleted, userState);
        }
        
        private void OnGetPartNoDetailsOperationCompleted(object arg) {
            if ((this.GetPartNoDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartNoDetailsCompleted(this, new GetPartNoDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPartNoDetails2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPartNoDetails2(string PartNo, string userName) {
            object[] results = this.Invoke("GetPartNoDetails2", new object[] {
                        PartNo,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartNoDetails2Async(string PartNo, string userName) {
            this.GetPartNoDetails2Async(PartNo, userName, null);
        }
        
        /// <remarks/>
        public void GetPartNoDetails2Async(string PartNo, string userName, object userState) {
            if ((this.GetPartNoDetails2OperationCompleted == null)) {
                this.GetPartNoDetails2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartNoDetails2OperationCompleted);
            }
            this.InvokeAsync("GetPartNoDetails2", new object[] {
                        PartNo,
                        userName}, this.GetPartNoDetails2OperationCompleted, userState);
        }
        
        private void OnGetPartNoDetails2OperationCompleted(object arg) {
            if ((this.GetPartNoDetails2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartNoDetails2Completed(this, new GetPartNoDetails2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBCNBySNPN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBCNBySNPN(string SerialNo, string PartNo, string userName) {
            object[] results = this.Invoke("GetBCNBySNPN", new object[] {
                        SerialNo,
                        PartNo,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBCNBySNPNAsync(string SerialNo, string PartNo, string userName) {
            this.GetBCNBySNPNAsync(SerialNo, PartNo, userName, null);
        }
        
        /// <remarks/>
        public void GetBCNBySNPNAsync(string SerialNo, string PartNo, string userName, object userState) {
            if ((this.GetBCNBySNPNOperationCompleted == null)) {
                this.GetBCNBySNPNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBCNBySNPNOperationCompleted);
            }
            this.InvokeAsync("GetBCNBySNPN", new object[] {
                        SerialNo,
                        PartNo,
                        userName}, this.GetBCNBySNPNOperationCompleted, userState);
        }
        
        private void OnGetBCNBySNPNOperationCompleted(object arg) {
            if ((this.GetBCNBySNPNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBCNBySNPNCompleted(this, new GetBCNBySNPNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBOMNoDefectAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBOMNoDefectAction(string PartNo, string itemId, string AssemblyCode, string ActionCodeID, string userName) {
            object[] results = this.Invoke("GetBOMNoDefectAction", new object[] {
                        PartNo,
                        itemId,
                        AssemblyCode,
                        ActionCodeID,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMNoDefectActionAsync(string PartNo, string itemId, string AssemblyCode, string ActionCodeID, string userName) {
            this.GetBOMNoDefectActionAsync(PartNo, itemId, AssemblyCode, ActionCodeID, userName, null);
        }
        
        /// <remarks/>
        public void GetBOMNoDefectActionAsync(string PartNo, string itemId, string AssemblyCode, string ActionCodeID, string userName, object userState) {
            if ((this.GetBOMNoDefectActionOperationCompleted == null)) {
                this.GetBOMNoDefectActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMNoDefectActionOperationCompleted);
            }
            this.InvokeAsync("GetBOMNoDefectAction", new object[] {
                        PartNo,
                        itemId,
                        AssemblyCode,
                        ActionCodeID,
                        userName}, this.GetBOMNoDefectActionOperationCompleted, userState);
        }
        
        private void OnGetBOMNoDefectActionOperationCompleted(object arg) {
            if ((this.GetBOMNoDefectActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMNoDefectActionCompleted(this, new GetBOMNoDefectActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDefectActionTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CheckDefectActionTable(int itemId, int PartId, int DefectCodeId, int ActionCodeId, string userName) {
            object[] results = this.Invoke("CheckDefectActionTable", new object[] {
                        itemId,
                        PartId,
                        DefectCodeId,
                        ActionCodeId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDefectActionTableAsync(int itemId, int PartId, int DefectCodeId, int ActionCodeId, string userName) {
            this.CheckDefectActionTableAsync(itemId, PartId, DefectCodeId, ActionCodeId, userName, null);
        }
        
        /// <remarks/>
        public void CheckDefectActionTableAsync(int itemId, int PartId, int DefectCodeId, int ActionCodeId, string userName, object userState) {
            if ((this.CheckDefectActionTableOperationCompleted == null)) {
                this.CheckDefectActionTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDefectActionTableOperationCompleted);
            }
            this.InvokeAsync("CheckDefectActionTable", new object[] {
                        itemId,
                        PartId,
                        DefectCodeId,
                        ActionCodeId,
                        userName}, this.CheckDefectActionTableOperationCompleted, userState);
        }
        
        private void OnCheckDefectActionTableOperationCompleted(object arg) {
            if ((this.CheckDefectActionTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDefectActionTableCompleted(this, new CheckDefectActionTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAltPartDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAltPartDetails(int itemId, int ParentPartId, int AltPartId, string userName) {
            object[] results = this.Invoke("GetAltPartDetails", new object[] {
                        itemId,
                        ParentPartId,
                        AltPartId,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAltPartDetailsAsync(int itemId, int ParentPartId, int AltPartId, string userName) {
            this.GetAltPartDetailsAsync(itemId, ParentPartId, AltPartId, userName, null);
        }
        
        /// <remarks/>
        public void GetAltPartDetailsAsync(int itemId, int ParentPartId, int AltPartId, string userName, object userState) {
            if ((this.GetAltPartDetailsOperationCompleted == null)) {
                this.GetAltPartDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAltPartDetailsOperationCompleted);
            }
            this.InvokeAsync("GetAltPartDetails", new object[] {
                        itemId,
                        ParentPartId,
                        AltPartId,
                        userName}, this.GetAltPartDetailsOperationCompleted, userState);
        }
        
        private void OnGetAltPartDetailsOperationCompleted(object arg) {
            if ((this.GetAltPartDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAltPartDetailsCompleted(this, new GetAltPartDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMatchingCOMPASSYBYACT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMatchingCOMPASSYBYACT(string locName, string clientName, string contrName, string routeName, string acCode, string asmCode, string partNo, string compPartNo, string userName) {
            object[] results = this.Invoke("GetMatchingCOMPASSYBYACT", new object[] {
                        locName,
                        clientName,
                        contrName,
                        routeName,
                        acCode,
                        asmCode,
                        partNo,
                        compPartNo,
                        userName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchingCOMPASSYBYACTAsync(string locName, string clientName, string contrName, string routeName, string acCode, string asmCode, string partNo, string compPartNo, string userName) {
            this.GetMatchingCOMPASSYBYACTAsync(locName, clientName, contrName, routeName, acCode, asmCode, partNo, compPartNo, userName, null);
        }
        
        /// <remarks/>
        public void GetMatchingCOMPASSYBYACTAsync(string locName, string clientName, string contrName, string routeName, string acCode, string asmCode, string partNo, string compPartNo, string userName, object userState) {
            if ((this.GetMatchingCOMPASSYBYACTOperationCompleted == null)) {
                this.GetMatchingCOMPASSYBYACTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchingCOMPASSYBYACTOperationCompleted);
            }
            this.InvokeAsync("GetMatchingCOMPASSYBYACT", new object[] {
                        locName,
                        clientName,
                        contrName,
                        routeName,
                        acCode,
                        asmCode,
                        partNo,
                        compPartNo,
                        userName}, this.GetMatchingCOMPASSYBYACTOperationCompleted, userState);
        }
        
        private void OnGetMatchingCOMPASSYBYACTOperationCompleted(object arg) {
            if ((this.GetMatchingCOMPASSYBYACTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchingCOMPASSYBYACTCompleted(this, new GetMatchingCOMPASSYBYACTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBOMRemByDefectAction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBOMRemByDefectAction(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName) {
            object[] results = this.Invoke("GetBOMRemByDefectAction", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        actionCodeId,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBOMRemByDefectActionAsync(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName) {
            this.GetBOMRemByDefectActionAsync(partNo, itemId, defectCodeId, assemblyName, actionCodeId, UserName, null);
        }
        
        /// <remarks/>
        public void GetBOMRemByDefectActionAsync(string partNo, int itemId, int defectCodeId, string assemblyName, int actionCodeId, string UserName, object userState) {
            if ((this.GetBOMRemByDefectActionOperationCompleted == null)) {
                this.GetBOMRemByDefectActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBOMRemByDefectActionOperationCompleted);
            }
            this.InvokeAsync("GetBOMRemByDefectAction", new object[] {
                        partNo,
                        itemId,
                        defectCodeId,
                        assemblyName,
                        actionCodeId,
                        UserName}, this.GetBOMRemByDefectActionOperationCompleted, userState);
        }
        
        private void OnGetBOMRemByDefectActionOperationCompleted(object arg) {
            if ((this.GetBOMRemByDefectActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBOMRemByDefectActionCompleted(this, new GetBOMRemByDefectActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNonBOMInvByPart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNonBOMInvByPart(string partNo, int itemId, string UserName) {
            object[] results = this.Invoke("GetNonBOMInvByPart", new object[] {
                        partNo,
                        itemId,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNonBOMInvByPartAsync(string partNo, int itemId, string UserName) {
            this.GetNonBOMInvByPartAsync(partNo, itemId, UserName, null);
        }
        
        /// <remarks/>
        public void GetNonBOMInvByPartAsync(string partNo, int itemId, string UserName, object userState) {
            if ((this.GetNonBOMInvByPartOperationCompleted == null)) {
                this.GetNonBOMInvByPartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNonBOMInvByPartOperationCompleted);
            }
            this.InvokeAsync("GetNonBOMInvByPart", new object[] {
                        partNo,
                        itemId,
                        UserName}, this.GetNonBOMInvByPartOperationCompleted, userState);
        }
        
        private void OnGetNonBOMInvByPartOperationCompleted(object arg) {
            if ((this.GetNonBOMInvByPartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNonBOMInvByPartCompleted(this, new GetNonBOMInvByPartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOwnersCondition", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOwnersCondition(int itemId, string issueremoveind, string UserName) {
            object[] results = this.Invoke("GetOwnersCondition", new object[] {
                        itemId,
                        issueremoveind,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnersConditionAsync(int itemId, string issueremoveind, string UserName) {
            this.GetOwnersConditionAsync(itemId, issueremoveind, UserName, null);
        }
        
        /// <remarks/>
        public void GetOwnersConditionAsync(int itemId, string issueremoveind, string UserName, object userState) {
            if ((this.GetOwnersConditionOperationCompleted == null)) {
                this.GetOwnersConditionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnersConditionOperationCompleted);
            }
            this.InvokeAsync("GetOwnersCondition", new object[] {
                        itemId,
                        issueremoveind,
                        UserName}, this.GetOwnersConditionOperationCompleted, userState);
        }
        
        private void OnGetOwnersConditionOperationCompleted(object arg) {
            if ((this.GetOwnersConditionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnersConditionCompleted(this, new GetOwnersConditionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum IdentificatorTypes {
        
        /// <remarks/>
        BCN,
        
        /// <remarks/>
        SerialNumber,
        
        /// <remarks/>
        FixedAssetTag,
        
        /// <remarks/>
        ITEM_BCN,
        
        /// <remarks/>
        SERIAL_NO,
        
        /// <remarks/>
        FIX_ASSET_TAG,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class GetDefectInfo {
        
        private string clientNameField;
        
        private string contractNameField;
        
        private string geographyNameField;
        
        private string orderProcessTypeField;
        
        private string workCenterNameField;
        
        private string resultCodeField;
        
        /// <remarks/>
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public string ContractName {
            get {
                return this.contractNameField;
            }
            set {
                this.contractNameField = value;
            }
        }
        
        /// <remarks/>
        public string GeographyName {
            get {
                return this.geographyNameField;
            }
            set {
                this.geographyNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrderProcessType {
            get {
                return this.orderProcessTypeField;
            }
            set {
                this.orderProcessTypeField = value;
            }
        }
        
        /// <remarks/>
        public string WorkCenterName {
            get {
                return this.workCenterNameField;
            }
            set {
                this.workCenterNameField = value;
            }
        }
        
        /// <remarks/>
        public string ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserInformation {
        
        private string userLoginField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private int defaultLocationIdField;
        
        private string defaultLocationNameField;
        
        /// <remarks/>
        public string UserLogin {
            get {
                return this.userLoginField;
            }
            set {
                this.userLoginField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultLocationId {
            get {
                return this.defaultLocationIdField;
            }
            set {
                this.defaultLocationIdField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultLocationName {
            get {
                return this.defaultLocationNameField;
            }
            set {
                this.defaultLocationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SystemOutComeCodeTypes {
        
        /// <remarks/>
        DIA,
        
        /// <remarks/>
        SYM,
        
        /// <remarks/>
        FLR,
        
        /// <remarks/>
        RPR,
        
        /// <remarks/>
        RES,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetFFValuesCompletedEventHandler(object sender, GetFFValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFFValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFFValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAppControlsCompletedEventHandler(object sender, GetAppControlsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppControlsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppControlsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPartReqCompletedEventHandler(object sender, GetPartReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUnitInfoCompletedEventHandler(object sender, GetUnitInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IsTechReturnCompletedEventHandler(object sender, IsTechReturnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsTechReturnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsTechReturnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultCodesCompletedEventHandler(object sender, GetResultCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetNextWorkCenterCompletedEventHandler(object sender, GetNextWorkCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextWorkCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextWorkCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDefectCodesCompletedEventHandler(object sender, GetDefectCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefectCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefectCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void IsCosmeticDefectOpenCompletedEventHandler(object sender, IsCosmeticDefectOpenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsCosmeticDefectOpenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsCosmeticDefectOpenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUnitInfoNonWOCompletedEventHandler(object sender, GetUnitInfoNonWOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitInfoNonWOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitInfoNonWOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUnitCountCompletedEventHandler(object sender, GetUnitCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetFFByWCCompletedEventHandler(object sender, GetFFByWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFFByWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFFByWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetOutComeCodesCompletedEventHandler(object sender, GetOutComeCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutComeCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutComeCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAssemblyCodesCompletedEventHandler(object sender, GetAssemblyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssemblyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssemblyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateAssemblyCodeCompletedEventHandler(object sender, ValidateAssemblyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateAssemblyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateAssemblyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDefectCodeByAssemblyCompletedEventHandler(object sender, GetDefectCodeByAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefectCodeByAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefectCodeByAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateDefectCodeByAssemblyCompletedEventHandler(object sender, ValidateDefectCodeByAssemblyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDefectCodeByAssemblyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDefectCodeByAssemblyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetDefectCodes4WCCompletedEventHandler(object sender, GetDefectCodes4WCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefectCodes4WCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefectCodes4WCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateDefectCodes4WCCompletedEventHandler(object sender, ValidateDefectCodes4WCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateDefectCodes4WCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateDefectCodes4WCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetActionByDefectCompletedEventHandler(object sender, GetActionByDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActionByDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActionByDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateActionByDefectCompletedEventHandler(object sender, ValidateActionByDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateActionByDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateActionByDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultByActionCompletedEventHandler(object sender, GetResultByActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultByActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultByActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetResultByDefectCompletedEventHandler(object sender, GetResultByDefectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetResultByDefectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetResultByDefectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetECOByPartCompletedEventHandler(object sender, GetECOByPartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECOByPartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECOByPartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InsertSerialECOCompletedEventHandler(object sender, InsertSerialECOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSerialECOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSerialECOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSNHistoryCompletedEventHandler(object sender, GetSNHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSNHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSNHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetWorkCenterByUserCompletedEventHandler(object sender, GetWorkCenterByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkCenterByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkCenterByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetRoutesByWCCompletedEventHandler(object sender, GetRoutesByWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoutesByWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoutesByWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUnitFAInfoCompletedEventHandler(object sender, GetUnitFAInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitFAInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitFAInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CompByAssemblyByActionCompletedEventHandler(object sender, CompByAssemblyByActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompByAssemblyByActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompByAssemblyByActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetLastWorkCenterCompletedEventHandler(object sender, GetLastWorkCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLastWorkCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLastWorkCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBOMCompletedEventHandler(object sender, GetBOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBOMByDefectActionCompletedEventHandler(object sender, GetBOMByDefectActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMByDefectActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMByDefectActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetInfoNonWOHistoryCompletedEventHandler(object sender, GetInfoNonWOHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoNonWOHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoNonWOHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateTimeoutByWCCompletedEventHandler(object sender, ValidateTimeoutByWCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateTimeoutByWCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateTimeoutByWCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidateConfigurationCompletedEventHandler(object sender, ValidateConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUnitInfoNonWOXMLCompletedEventHandler(object sender, GetUnitInfoNonWOXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnitInfoNonWOXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnitInfoNonWOXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetUserInformationCompletedEventHandler(object sender, GetUserInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void Get_CodesCompletedEventHandler(object sender, Get_CodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_CodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_CodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetFAFFValuesCompletedEventHandler(object sender, GetFAFFValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFAFFValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFAFFValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCompFAFFValuesCompletedEventHandler(object sender, GetCompFAFFValuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompFAFFValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompFAFFValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetItemInfoByXMLCompletedEventHandler(object sender, GetItemInfoByXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemInfoByXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemInfoByXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ValidatePartNumbersCompletedEventHandler(object sender, ValidatePartNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidatePartNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidatePartNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPartReqByItemCompletedEventHandler(object sender, GetPartReqByItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartReqByItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartReqByItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCascadingBOMCompletedEventHandler(object sender, GetCascadingBOMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCascadingBOMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCascadingBOMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPartInfoCompletedEventHandler(object sender, GetPartInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetCompFAFFValuesV2CompletedEventHandler(object sender, GetCompFAFFValuesV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompFAFFValuesV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompFAFFValuesV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAlternatePartMainCompletedEventHandler(object sender, GetAlternatePartMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlternatePartMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlternatePartMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetReqTemplateInfoCompletedEventHandler(object sender, GetReqTemplateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReqTemplateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReqTemplateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPartNoDetailsCompletedEventHandler(object sender, GetPartNoDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartNoDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartNoDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetPartNoDetails2CompletedEventHandler(object sender, GetPartNoDetails2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartNoDetails2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartNoDetails2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBCNBySNPNCompletedEventHandler(object sender, GetBCNBySNPNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBCNBySNPNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBCNBySNPNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBOMNoDefectActionCompletedEventHandler(object sender, GetBOMNoDefectActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMNoDefectActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMNoDefectActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void CheckDefectActionTableCompletedEventHandler(object sender, CheckDefectActionTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDefectActionTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDefectActionTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAltPartDetailsCompletedEventHandler(object sender, GetAltPartDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAltPartDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAltPartDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetMatchingCOMPASSYBYACTCompletedEventHandler(object sender, GetMatchingCOMPASSYBYACTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchingCOMPASSYBYACTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchingCOMPASSYBYACTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetBOMRemByDefectActionCompletedEventHandler(object sender, GetBOMRemByDefectActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBOMRemByDefectActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBOMRemByDefectActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetNonBOMInvByPartCompletedEventHandler(object sender, GetNonBOMInvByPartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNonBOMInvByPartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNonBOMInvByPartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetOwnersConditionCompletedEventHandler(object sender, GetOwnersConditionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOwnersConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOwnersConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591