//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3623
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3623.
// 
#pragma warning disable 1591

namespace JGS.Web.DTVTriggerProviders.Print {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="JGSPrintServiceSoap", Namespace="http://JGSPrintService.org/")]
    public partial class JGSPrintService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidateConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestPrintOperationCompleted;
        
        private System.Threading.SendOrPostCallback BeginBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddToBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AbortBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback CallJGSPrintServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback OnePrintServiceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public JGSPrintService() {
            this.Url = global::JGS.Web.DTVTriggerProviders.Properties.Settings.Default.JGS_Web_DTVTriggerProviders_Print_JGSPrintService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidateConfigurationCompletedEventHandler ValidateConfigurationCompleted;
        
        /// <remarks/>
        public event RequestPrintCompletedEventHandler RequestPrintCompleted;
        
        /// <remarks/>
        public event BeginBatchCompletedEventHandler BeginBatchCompleted;
        
        /// <remarks/>
        public event AddToBatchCompletedEventHandler AddToBatchCompleted;
        
        /// <remarks/>
        public event CommitBatchCompletedEventHandler CommitBatchCompleted;
        
        /// <remarks/>
        public event AbortBatchCompletedEventHandler AbortBatchCompleted;
        
        /// <remarks/>
        public event CallJGSPrintServiceCompletedEventHandler CallJGSPrintServiceCompleted;
        
        /// <remarks/>
        public event OnePrintServiceCompletedEventHandler OnePrintServiceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_Validate", RequestElementName="OnePrint_Validate", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_ValidateResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_ValidateResult")]
        public bool ValidateConfiguration(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName) {
            object[] results = this.Invoke("ValidateConfiguration", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateConfigurationAsync(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName) {
            this.ValidateConfigurationAsync(locationId, clientId, contractId, routeName, workCenterId, eventName, hostName, userName, null);
        }
        
        /// <remarks/>
        public void ValidateConfigurationAsync(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, object userState) {
            if ((this.ValidateConfigurationOperationCompleted == null)) {
                this.ValidateConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateConfigurationOperationCompleted);
            }
            this.InvokeAsync("ValidateConfiguration", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName}, this.ValidateConfigurationOperationCompleted, userState);
        }
        
        private void OnValidateConfigurationOperationCompleted(object arg) {
            if ((this.ValidateConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateConfigurationCompleted(this, new ValidateConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_Request", RequestElementName="OnePrint_Request", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_RequestResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_RequestResult")]
        public string RequestPrint(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, string printerName, string reportTemplate, int copies, bool needDB, System.Data.DataSet @params) {
            object[] results = this.Invoke("RequestPrint", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName,
                        printerName,
                        reportTemplate,
                        copies,
                        needDB,
                        @params});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequestPrintAsync(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, string printerName, string reportTemplate, int copies, bool needDB, System.Data.DataSet @params) {
            this.RequestPrintAsync(locationId, clientId, contractId, routeName, workCenterId, eventName, hostName, userName, printerName, reportTemplate, copies, needDB, @params, null);
        }
        
        /// <remarks/>
        public void RequestPrintAsync(int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, string printerName, string reportTemplate, int copies, bool needDB, System.Data.DataSet @params, object userState) {
            if ((this.RequestPrintOperationCompleted == null)) {
                this.RequestPrintOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestPrintOperationCompleted);
            }
            this.InvokeAsync("RequestPrint", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName,
                        printerName,
                        reportTemplate,
                        copies,
                        needDB,
                        @params}, this.RequestPrintOperationCompleted, userState);
        }
        
        private void OnRequestPrintOperationCompleted(object arg) {
            if ((this.RequestPrintCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestPrintCompleted(this, new RequestPrintCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_BeginBatch", RequestElementName="OnePrint_BeginBatch", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_BeginBatchResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_BeginBatchResult")]
        public System.Guid BeginBatch(System.Guid senderGuid, string hostName) {
            object[] results = this.Invoke("BeginBatch", new object[] {
                        senderGuid,
                        hostName});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void BeginBatchAsync(System.Guid senderGuid, string hostName) {
            this.BeginBatchAsync(senderGuid, hostName, null);
        }
        
        /// <remarks/>
        public void BeginBatchAsync(System.Guid senderGuid, string hostName, object userState) {
            if ((this.BeginBatchOperationCompleted == null)) {
                this.BeginBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBeginBatchOperationCompleted);
            }
            this.InvokeAsync("BeginBatch", new object[] {
                        senderGuid,
                        hostName}, this.BeginBatchOperationCompleted, userState);
        }
        
        private void OnBeginBatchOperationCompleted(object arg) {
            if ((this.BeginBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BeginBatchCompleted(this, new BeginBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_AddToBatch", RequestElementName="OnePrint_AddToBatch", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_AddToBatchResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_AddToBatchResult")]
        public string AddToBatch(System.Guid senderGuid, System.Guid batchGuid, int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, string printerName, string reportTemplate, int copies, bool needDB, System.Data.DataSet @params) {
            object[] results = this.Invoke("AddToBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName,
                        printerName,
                        reportTemplate,
                        copies,
                        needDB,
                        @params});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddToBatchAsync(System.Guid senderGuid, System.Guid batchGuid, int locationId, int clientId, int contractId, string routeName, int workCenterId, string eventName, string hostName, string userName, string printerName, string reportTemplate, int copies, bool needDB, System.Data.DataSet @params) {
            this.AddToBatchAsync(senderGuid, batchGuid, locationId, clientId, contractId, routeName, workCenterId, eventName, hostName, userName, printerName, reportTemplate, copies, needDB, @params, null);
        }
        
        /// <remarks/>
        public void AddToBatchAsync(
                    System.Guid senderGuid, 
                    System.Guid batchGuid, 
                    int locationId, 
                    int clientId, 
                    int contractId, 
                    string routeName, 
                    int workCenterId, 
                    string eventName, 
                    string hostName, 
                    string userName, 
                    string printerName, 
                    string reportTemplate, 
                    int copies, 
                    bool needDB, 
                    System.Data.DataSet @params, 
                    object userState) {
            if ((this.AddToBatchOperationCompleted == null)) {
                this.AddToBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddToBatchOperationCompleted);
            }
            this.InvokeAsync("AddToBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        locationId,
                        clientId,
                        contractId,
                        routeName,
                        workCenterId,
                        eventName,
                        hostName,
                        userName,
                        printerName,
                        reportTemplate,
                        copies,
                        needDB,
                        @params}, this.AddToBatchOperationCompleted, userState);
        }
        
        private void OnAddToBatchOperationCompleted(object arg) {
            if ((this.AddToBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddToBatchCompleted(this, new AddToBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_CommitBatch", RequestElementName="OnePrint_CommitBatch", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_CommitBatchResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CommitBatch(System.Guid senderGuid, System.Guid batchGuid, string hostName) {
            this.Invoke("CommitBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        hostName});
        }
        
        /// <remarks/>
        public void CommitBatchAsync(System.Guid senderGuid, System.Guid batchGuid, string hostName) {
            this.CommitBatchAsync(senderGuid, batchGuid, hostName, null);
        }
        
        /// <remarks/>
        public void CommitBatchAsync(System.Guid senderGuid, System.Guid batchGuid, string hostName, object userState) {
            if ((this.CommitBatchOperationCompleted == null)) {
                this.CommitBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitBatchOperationCompleted);
            }
            this.InvokeAsync("CommitBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        hostName}, this.CommitBatchOperationCompleted, userState);
        }
        
        private void OnCommitBatchOperationCompleted(object arg) {
            if ((this.CommitBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_AbortBatch", RequestElementName="OnePrint_AbortBatch", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_AbortBatchResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AbortBatch(System.Guid senderGuid, System.Guid batchGuid, string hostName) {
            this.Invoke("AbortBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        hostName});
        }
        
        /// <remarks/>
        public void AbortBatchAsync(System.Guid senderGuid, System.Guid batchGuid, string hostName) {
            this.AbortBatchAsync(senderGuid, batchGuid, hostName, null);
        }
        
        /// <remarks/>
        public void AbortBatchAsync(System.Guid senderGuid, System.Guid batchGuid, string hostName, object userState) {
            if ((this.AbortBatchOperationCompleted == null)) {
                this.AbortBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortBatchOperationCompleted);
            }
            this.InvokeAsync("AbortBatch", new object[] {
                        senderGuid,
                        batchGuid,
                        hostName}, this.AbortBatchOperationCompleted, userState);
        }
        
        private void OnAbortBatchOperationCompleted(object arg) {
            if ((this.AbortBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbortBatchCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_JGSPrint_by_Name", RequestElementName="OnePrint_JGSPrint_by_Name", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_JGSPrint_by_NameResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_JGSPrint_by_NameResult")]
        public string CallJGSPrintService(string locationName, string clientName, string contractName, string routeCode, string workCenterName, string eventName, string hostName, string userName, System.Data.DataSet parameterDs) {
            object[] results = this.Invoke("CallJGSPrintService", new object[] {
                        locationName,
                        clientName,
                        contractName,
                        routeCode,
                        workCenterName,
                        eventName,
                        hostName,
                        userName,
                        parameterDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CallJGSPrintServiceAsync(string locationName, string clientName, string contractName, string routeCode, string workCenterName, string eventName, string hostName, string userName, System.Data.DataSet parameterDs) {
            this.CallJGSPrintServiceAsync(locationName, clientName, contractName, routeCode, workCenterName, eventName, hostName, userName, parameterDs, null);
        }
        
        /// <remarks/>
        public void CallJGSPrintServiceAsync(string locationName, string clientName, string contractName, string routeCode, string workCenterName, string eventName, string hostName, string userName, System.Data.DataSet parameterDs, object userState) {
            if ((this.CallJGSPrintServiceOperationCompleted == null)) {
                this.CallJGSPrintServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallJGSPrintServiceOperationCompleted);
            }
            this.InvokeAsync("CallJGSPrintService", new object[] {
                        locationName,
                        clientName,
                        contractName,
                        routeCode,
                        workCenterName,
                        eventName,
                        hostName,
                        userName,
                        parameterDs}, this.CallJGSPrintServiceOperationCompleted, userState);
        }
        
        private void OnCallJGSPrintServiceOperationCompleted(object arg) {
            if ((this.CallJGSPrintServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallJGSPrintServiceCompleted(this, new CallJGSPrintServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://JGSPrintService.org/OnePrint_Print", RequestElementName="OnePrint_Print", RequestNamespace="http://JGSPrintService.org/", ResponseElementName="OnePrint_PrintResponse", ResponseNamespace="http://JGSPrintService.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OnePrint_PrintResult")]
        public string OnePrintService(int locationId, int clientId, int contractId, string routeCode, int workcenterId, string eventName, string hostName, string userName, System.Data.DataSet parameterDs) {
            object[] results = this.Invoke("OnePrintService", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeCode,
                        workcenterId,
                        eventName,
                        hostName,
                        userName,
                        parameterDs});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OnePrintServiceAsync(int locationId, int clientId, int contractId, string routeCode, int workcenterId, string eventName, string hostName, string userName, System.Data.DataSet parameterDs) {
            this.OnePrintServiceAsync(locationId, clientId, contractId, routeCode, workcenterId, eventName, hostName, userName, parameterDs, null);
        }
        
        /// <remarks/>
        public void OnePrintServiceAsync(int locationId, int clientId, int contractId, string routeCode, int workcenterId, string eventName, string hostName, string userName, System.Data.DataSet parameterDs, object userState) {
            if ((this.OnePrintServiceOperationCompleted == null)) {
                this.OnePrintServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOnePrintServiceOperationCompleted);
            }
            this.InvokeAsync("OnePrintService", new object[] {
                        locationId,
                        clientId,
                        contractId,
                        routeCode,
                        workcenterId,
                        eventName,
                        hostName,
                        userName,
                        parameterDs}, this.OnePrintServiceOperationCompleted, userState);
        }
        
        private void OnOnePrintServiceOperationCompleted(object arg) {
            if ((this.OnePrintServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OnePrintServiceCompleted(this, new OnePrintServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ValidateConfigurationCompletedEventHandler(object sender, ValidateConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RequestPrintCompletedEventHandler(object sender, RequestPrintCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestPrintCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestPrintCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void BeginBatchCompletedEventHandler(object sender, BeginBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BeginBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BeginBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddToBatchCompletedEventHandler(object sender, AddToBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddToBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddToBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CommitBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AbortBatchCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CallJGSPrintServiceCompletedEventHandler(object sender, CallJGSPrintServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallJGSPrintServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CallJGSPrintServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void OnePrintServiceCompletedEventHandler(object sender, OnePrintServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OnePrintServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OnePrintServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591