//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3625
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3625.
// 
#pragma warning disable 1591

namespace JGS.Web.DTVTriggerProviders.CamId {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CamIdValidationServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CamIdValidationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertCamIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCamIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReportCamIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCamIdANDSerialOperationCompleted;
        
        private System.Threading.SendOrPostCallback CamIdHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationNameByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeOfCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValCamExceptvsModelOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CamIdValidationService() {
            this.Url = global::JGS.Web.DTVTriggerProviders.Properties.Settings.Default.JGS_Web_DTVTriggerProviders_CamId_CamIdValidationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertCamIdCompletedEventHandler InsertCamIdCompleted;
        
        /// <remarks/>
        public event UpdateCamIdCompletedEventHandler UpdateCamIdCompleted;
        
        /// <remarks/>
        public event ReportCamIdCompletedEventHandler ReportCamIdCompleted;
        
        /// <remarks/>
        public event UpdateCamIdANDSerialCompletedEventHandler UpdateCamIdANDSerialCompleted;
        
        /// <remarks/>
        public event CamIdHistoryCompletedEventHandler CamIdHistoryCompleted;
        
        /// <remarks/>
        public event GetLocationNameByUserCompletedEventHandler GetLocationNameByUserCompleted;
        
        /// <remarks/>
        public event GetTypeOfCardCompletedEventHandler GetTypeOfCardCompleted;
        
        /// <remarks/>
        public event ValCamExceptvsModelCompletedEventHandler ValCamExceptvsModelCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCamId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet InsertCamId(string camId, int box, int pack, int cage, string Geo, string UserName) {
            object[] results = this.Invoke("InsertCamId", new object[] {
                        camId,
                        box,
                        pack,
                        cage,
                        Geo,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void InsertCamIdAsync(string camId, int box, int pack, int cage, string Geo, string UserName) {
            this.InsertCamIdAsync(camId, box, pack, cage, Geo, UserName, null);
        }
        
        /// <remarks/>
        public void InsertCamIdAsync(string camId, int box, int pack, int cage, string Geo, string UserName, object userState) {
            if ((this.InsertCamIdOperationCompleted == null)) {
                this.InsertCamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertCamIdOperationCompleted);
            }
            this.InvokeAsync("InsertCamId", new object[] {
                        camId,
                        box,
                        pack,
                        cage,
                        Geo,
                        UserName}, this.InsertCamIdOperationCompleted, userState);
        }
        
        private void OnInsertCamIdOperationCompleted(object arg) {
            if ((this.InsertCamIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertCamIdCompleted(this, new InsertCamIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCamId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCamId(string camId, string serial, string UserName, string Geo) {
            object[] results = this.Invoke("UpdateCamId", new object[] {
                        camId,
                        serial,
                        UserName,
                        Geo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCamIdAsync(string camId, string serial, string UserName, string Geo) {
            this.UpdateCamIdAsync(camId, serial, UserName, Geo, null);
        }
        
        /// <remarks/>
        public void UpdateCamIdAsync(string camId, string serial, string UserName, string Geo, object userState) {
            if ((this.UpdateCamIdOperationCompleted == null)) {
                this.UpdateCamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCamIdOperationCompleted);
            }
            this.InvokeAsync("UpdateCamId", new object[] {
                        camId,
                        serial,
                        UserName,
                        Geo}, this.UpdateCamIdOperationCompleted, userState);
        }
        
        private void OnUpdateCamIdOperationCompleted(object arg) {
            if ((this.UpdateCamIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCamIdCompleted(this, new UpdateCamIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportCamId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ReportCamId(int Cage, string Date1, string Date2, string Geo, string UserName) {
            object[] results = this.Invoke("ReportCamId", new object[] {
                        Cage,
                        Date1,
                        Date2,
                        Geo,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReportCamIdAsync(int Cage, string Date1, string Date2, string Geo, string UserName) {
            this.ReportCamIdAsync(Cage, Date1, Date2, Geo, UserName, null);
        }
        
        /// <remarks/>
        public void ReportCamIdAsync(int Cage, string Date1, string Date2, string Geo, string UserName, object userState) {
            if ((this.ReportCamIdOperationCompleted == null)) {
                this.ReportCamIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportCamIdOperationCompleted);
            }
            this.InvokeAsync("ReportCamId", new object[] {
                        Cage,
                        Date1,
                        Date2,
                        Geo,
                        UserName}, this.ReportCamIdOperationCompleted, userState);
        }
        
        private void OnReportCamIdOperationCompleted(object arg) {
            if ((this.ReportCamIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportCamIdCompleted(this, new ReportCamIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCamIdANDSerial", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCamIdANDSerial(string camId, string serial, string UserName, string Geo, string PartNumber) {
            object[] results = this.Invoke("UpdateCamIdANDSerial", new object[] {
                        camId,
                        serial,
                        UserName,
                        Geo,
                        PartNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCamIdANDSerialAsync(string camId, string serial, string UserName, string Geo, string PartNumber) {
            this.UpdateCamIdANDSerialAsync(camId, serial, UserName, Geo, PartNumber, null);
        }
        
        /// <remarks/>
        public void UpdateCamIdANDSerialAsync(string camId, string serial, string UserName, string Geo, string PartNumber, object userState) {
            if ((this.UpdateCamIdANDSerialOperationCompleted == null)) {
                this.UpdateCamIdANDSerialOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCamIdANDSerialOperationCompleted);
            }
            this.InvokeAsync("UpdateCamIdANDSerial", new object[] {
                        camId,
                        serial,
                        UserName,
                        Geo,
                        PartNumber}, this.UpdateCamIdANDSerialOperationCompleted, userState);
        }
        
        private void OnUpdateCamIdANDSerialOperationCompleted(object arg) {
            if ((this.UpdateCamIdANDSerialCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCamIdANDSerialCompleted(this, new UpdateCamIdANDSerialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CamIdHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CamIdHistory(string ScanType, string Geo, string SN_CAMID_No, string UserName) {
            object[] results = this.Invoke("CamIdHistory", new object[] {
                        ScanType,
                        Geo,
                        SN_CAMID_No,
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CamIdHistoryAsync(string ScanType, string Geo, string SN_CAMID_No, string UserName) {
            this.CamIdHistoryAsync(ScanType, Geo, SN_CAMID_No, UserName, null);
        }
        
        /// <remarks/>
        public void CamIdHistoryAsync(string ScanType, string Geo, string SN_CAMID_No, string UserName, object userState) {
            if ((this.CamIdHistoryOperationCompleted == null)) {
                this.CamIdHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCamIdHistoryOperationCompleted);
            }
            this.InvokeAsync("CamIdHistory", new object[] {
                        ScanType,
                        Geo,
                        SN_CAMID_No,
                        UserName}, this.CamIdHistoryOperationCompleted, userState);
        }
        
        private void OnCamIdHistoryOperationCompleted(object arg) {
            if ((this.CamIdHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CamIdHistoryCompleted(this, new CamIdHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLocationNameByUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLocationNameByUser(string UserName) {
            object[] results = this.Invoke("GetLocationNameByUser", new object[] {
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationNameByUserAsync(string UserName) {
            this.GetLocationNameByUserAsync(UserName, null);
        }
        
        /// <remarks/>
        public void GetLocationNameByUserAsync(string UserName, object userState) {
            if ((this.GetLocationNameByUserOperationCompleted == null)) {
                this.GetLocationNameByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationNameByUserOperationCompleted);
            }
            this.InvokeAsync("GetLocationNameByUser", new object[] {
                        UserName}, this.GetLocationNameByUserOperationCompleted, userState);
        }
        
        private void OnGetLocationNameByUserOperationCompleted(object arg) {
            if ((this.GetLocationNameByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationNameByUserCompleted(this, new GetLocationNameByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTypeOfCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTypeOfCard(string CamId, string UserName) {
            object[] results = this.Invoke("GetTypeOfCard", new object[] {
                        CamId,
                        UserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeOfCardAsync(string CamId, string UserName) {
            this.GetTypeOfCardAsync(CamId, UserName, null);
        }
        
        /// <remarks/>
        public void GetTypeOfCardAsync(string CamId, string UserName, object userState) {
            if ((this.GetTypeOfCardOperationCompleted == null)) {
                this.GetTypeOfCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeOfCardOperationCompleted);
            }
            this.InvokeAsync("GetTypeOfCard", new object[] {
                        CamId,
                        UserName}, this.GetTypeOfCardOperationCompleted, userState);
        }
        
        private void OnGetTypeOfCardOperationCompleted(object arg) {
            if ((this.GetTypeOfCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeOfCardCompleted(this, new GetTypeOfCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ValCamExceptvsModel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValCamExceptvsModel(string camId, string UserName, string PartNumber) {
            object[] results = this.Invoke("ValCamExceptvsModel", new object[] {
                        camId,
                        UserName,
                        PartNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValCamExceptvsModelAsync(string camId, string UserName, string PartNumber) {
            this.ValCamExceptvsModelAsync(camId, UserName, PartNumber, null);
        }
        
        /// <remarks/>
        public void ValCamExceptvsModelAsync(string camId, string UserName, string PartNumber, object userState) {
            if ((this.ValCamExceptvsModelOperationCompleted == null)) {
                this.ValCamExceptvsModelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValCamExceptvsModelOperationCompleted);
            }
            this.InvokeAsync("ValCamExceptvsModel", new object[] {
                        camId,
                        UserName,
                        PartNumber}, this.ValCamExceptvsModelOperationCompleted, userState);
        }
        
        private void OnValCamExceptvsModelOperationCompleted(object arg) {
            if ((this.ValCamExceptvsModelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValCamExceptvsModelCompleted(this, new ValCamExceptvsModelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void InsertCamIdCompletedEventHandler(object sender, InsertCamIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertCamIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertCamIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCamIdCompletedEventHandler(object sender, UpdateCamIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCamIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCamIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ReportCamIdCompletedEventHandler(object sender, ReportCamIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportCamIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReportCamIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateCamIdANDSerialCompletedEventHandler(object sender, UpdateCamIdANDSerialCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCamIdANDSerialCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCamIdANDSerialCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CamIdHistoryCompletedEventHandler(object sender, CamIdHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CamIdHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CamIdHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLocationNameByUserCompletedEventHandler(object sender, GetLocationNameByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationNameByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationNameByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTypeOfCardCompletedEventHandler(object sender, GetTypeOfCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeOfCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeOfCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ValCamExceptvsModelCompletedEventHandler(object sender, ValCamExceptvsModelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValCamExceptvsModelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValCamExceptvsModelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591